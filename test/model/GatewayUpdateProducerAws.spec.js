/**
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.akeyless);
  }
}(this, function(expect, akeyless) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new akeyless.GatewayUpdateProducerAws();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GatewayUpdateProducerAws', function() {
    it('should create an instance of GatewayUpdateProducerAws', function() {
      // uncomment below and update the code to test GatewayUpdateProducerAws
      //var instane = new akeyless.GatewayUpdateProducerAws();
      //expect(instance).to.be.a(akeyless.GatewayUpdateProducerAws);
    });

    it('should have the property accessMode (base name: "access-mode")', function() {
      // uncomment below and update the code to test the property accessMode
      //var instane = new akeyless.GatewayUpdateProducerAws();
      //expect(instance).to.be();
    });

    it('should have the property adminRotationIntervalDays (base name: "admin-rotation-interval-days")', function() {
      // uncomment below and update the code to test the property adminRotationIntervalDays
      //var instane = new akeyless.GatewayUpdateProducerAws();
      //expect(instance).to.be();
    });

    it('should have the property awsAccessKeyId (base name: "aws-access-key-id")', function() {
      // uncomment below and update the code to test the property awsAccessKeyId
      //var instane = new akeyless.GatewayUpdateProducerAws();
      //expect(instance).to.be();
    });

    it('should have the property awsAccessSecretKey (base name: "aws-access-secret-key")', function() {
      // uncomment below and update the code to test the property awsAccessSecretKey
      //var instane = new akeyless.GatewayUpdateProducerAws();
      //expect(instance).to.be();
    });

    it('should have the property awsRoleArns (base name: "aws-role-arns")', function() {
      // uncomment below and update the code to test the property awsRoleArns
      //var instane = new akeyless.GatewayUpdateProducerAws();
      //expect(instance).to.be();
    });

    it('should have the property awsUserConsoleAccess (base name: "aws-user-console-access")', function() {
      // uncomment below and update the code to test the property awsUserConsoleAccess
      //var instane = new akeyless.GatewayUpdateProducerAws();
      //expect(instance).to.be();
    });

    it('should have the property awsUserGroups (base name: "aws-user-groups")', function() {
      // uncomment below and update the code to test the property awsUserGroups
      //var instane = new akeyless.GatewayUpdateProducerAws();
      //expect(instance).to.be();
    });

    it('should have the property awsUserPolicies (base name: "aws-user-policies")', function() {
      // uncomment below and update the code to test the property awsUserPolicies
      //var instane = new akeyless.GatewayUpdateProducerAws();
      //expect(instance).to.be();
    });

    it('should have the property awsUserProgrammaticAccess (base name: "aws-user-programmatic-access")', function() {
      // uncomment below and update the code to test the property awsUserProgrammaticAccess
      //var instane = new akeyless.GatewayUpdateProducerAws();
      //expect(instance).to.be();
    });

    it('should have the property enableAdminRotation (base name: "enable-admin-rotation")', function() {
      // uncomment below and update the code to test the property enableAdminRotation
      //var instane = new akeyless.GatewayUpdateProducerAws();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instane = new akeyless.GatewayUpdateProducerAws();
      //expect(instance).to.be();
    });

    it('should have the property newName (base name: "new-name")', function() {
      // uncomment below and update the code to test the property newName
      //var instane = new akeyless.GatewayUpdateProducerAws();
      //expect(instance).to.be();
    });

    it('should have the property password (base name: "password")', function() {
      // uncomment below and update the code to test the property password
      //var instane = new akeyless.GatewayUpdateProducerAws();
      //expect(instance).to.be();
    });

    it('should have the property producerEncryptionKeyName (base name: "producer-encryption-key-name")', function() {
      // uncomment below and update the code to test the property producerEncryptionKeyName
      //var instane = new akeyless.GatewayUpdateProducerAws();
      //expect(instance).to.be();
    });

    it('should have the property region (base name: "region")', function() {
      // uncomment below and update the code to test the property region
      //var instane = new akeyless.GatewayUpdateProducerAws();
      //expect(instance).to.be();
    });

    it('should have the property secureAccessAwsAccountId (base name: "secure-access-aws-account-id")', function() {
      // uncomment below and update the code to test the property secureAccessAwsAccountId
      //var instane = new akeyless.GatewayUpdateProducerAws();
      //expect(instance).to.be();
    });

    it('should have the property secureAccessAwsNativeCli (base name: "secure-access-aws-native-cli")', function() {
      // uncomment below and update the code to test the property secureAccessAwsNativeCli
      //var instane = new akeyless.GatewayUpdateProducerAws();
      //expect(instance).to.be();
    });

    it('should have the property secureAccessBastionIssuer (base name: "secure-access-bastion-issuer")', function() {
      // uncomment below and update the code to test the property secureAccessBastionIssuer
      //var instane = new akeyless.GatewayUpdateProducerAws();
      //expect(instance).to.be();
    });

    it('should have the property secureAccessEnable (base name: "secure-access-enable")', function() {
      // uncomment below and update the code to test the property secureAccessEnable
      //var instane = new akeyless.GatewayUpdateProducerAws();
      //expect(instance).to.be();
    });

    it('should have the property secureAccessWeb (base name: "secure-access-web")', function() {
      // uncomment below and update the code to test the property secureAccessWeb
      //var instane = new akeyless.GatewayUpdateProducerAws();
      //expect(instance).to.be();
    });

    it('should have the property secureAccessWebBrowsing (base name: "secure-access-web-browsing")', function() {
      // uncomment below and update the code to test the property secureAccessWebBrowsing
      //var instane = new akeyless.GatewayUpdateProducerAws();
      //expect(instance).to.be();
    });

    it('should have the property targetName (base name: "target-name")', function() {
      // uncomment below and update the code to test the property targetName
      //var instane = new akeyless.GatewayUpdateProducerAws();
      //expect(instance).to.be();
    });

    it('should have the property token (base name: "token")', function() {
      // uncomment below and update the code to test the property token
      //var instane = new akeyless.GatewayUpdateProducerAws();
      //expect(instance).to.be();
    });

    it('should have the property uidToken (base name: "uid-token")', function() {
      // uncomment below and update the code to test the property uidToken
      //var instane = new akeyless.GatewayUpdateProducerAws();
      //expect(instance).to.be();
    });

    it('should have the property userTtl (base name: "user-ttl")', function() {
      // uncomment below and update the code to test the property userTtl
      //var instane = new akeyless.GatewayUpdateProducerAws();
      //expect(instance).to.be();
    });

    it('should have the property username (base name: "username")', function() {
      // uncomment below and update the code to test the property username
      //var instane = new akeyless.GatewayUpdateProducerAws();
      //expect(instance).to.be();
    });

  });

}));
