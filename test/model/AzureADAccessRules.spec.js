/**
 * includes all operations supported by Akeyless.
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.akl);
  }
}(this, function(expect, akl) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new akl.AzureADAccessRules();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AzureADAccessRules', function() {
    it('should create an instance of AzureADAccessRules', function() {
      // uncomment below and update the code to test AzureADAccessRules
      //var instane = new akl.AzureADAccessRules();
      //expect(instance).to.be.a(akl.AzureADAccessRules);
    });

    it('should have the property adEndpoint (base name: "ad_endpoint")', function() {
      // uncomment below and update the code to test the property adEndpoint
      //var instane = new akl.AzureADAccessRules();
      //expect(instance).to.be();
    });

    it('should have the property boundGroupIds (base name: "bound_group_ids")', function() {
      // uncomment below and update the code to test the property boundGroupIds
      //var instane = new akl.AzureADAccessRules();
      //expect(instance).to.be();
    });

    it('should have the property boundResourceGroups (base name: "bound_resource_groups")', function() {
      // uncomment below and update the code to test the property boundResourceGroups
      //var instane = new akl.AzureADAccessRules();
      //expect(instance).to.be();
    });

    it('should have the property boundResourceIds (base name: "bound_resource_ids")', function() {
      // uncomment below and update the code to test the property boundResourceIds
      //var instane = new akl.AzureADAccessRules();
      //expect(instance).to.be();
    });

    it('should have the property boundResourceNames (base name: "bound_resource_names")', function() {
      // uncomment below and update the code to test the property boundResourceNames
      //var instane = new akl.AzureADAccessRules();
      //expect(instance).to.be();
    });

    it('should have the property boundResourceProviders (base name: "bound_resource_providers")', function() {
      // uncomment below and update the code to test the property boundResourceProviders
      //var instane = new akl.AzureADAccessRules();
      //expect(instance).to.be();
    });

    it('should have the property boundResourceTypes (base name: "bound_resource_types")', function() {
      // uncomment below and update the code to test the property boundResourceTypes
      //var instane = new akl.AzureADAccessRules();
      //expect(instance).to.be();
    });

    it('should have the property boundServicePrincipalIds (base name: "bound_service_principal_ids")', function() {
      // uncomment below and update the code to test the property boundServicePrincipalIds
      //var instane = new akl.AzureADAccessRules();
      //expect(instance).to.be();
    });

    it('should have the property boundSubscriptionIds (base name: "bound_subscription_ids")', function() {
      // uncomment below and update the code to test the property boundSubscriptionIds
      //var instane = new akl.AzureADAccessRules();
      //expect(instance).to.be();
    });

    it('should have the property boundTenantId (base name: "bound_tenant_id")', function() {
      // uncomment below and update the code to test the property boundTenantId
      //var instane = new akl.AzureADAccessRules();
      //expect(instance).to.be();
    });

    it('should have the property issuer (base name: "issuer")', function() {
      // uncomment below and update the code to test the property issuer
      //var instane = new akl.AzureADAccessRules();
      //expect(instance).to.be();
    });

    it('should have the property jwksUri (base name: "jwks_uri")', function() {
      // uncomment below and update the code to test the property jwksUri
      //var instane = new akl.AzureADAccessRules();
      //expect(instance).to.be();
    });

  });

}));
