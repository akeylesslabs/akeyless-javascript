/**
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.akeyless);
  }
}(this, function(expect, akeyless) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new akeyless.GatewayUpdateLogForwardingElasticsearch();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GatewayUpdateLogForwardingElasticsearch', function() {
    it('should create an instance of GatewayUpdateLogForwardingElasticsearch', function() {
      // uncomment below and update the code to test GatewayUpdateLogForwardingElasticsearch
      //var instane = new akeyless.GatewayUpdateLogForwardingElasticsearch();
      //expect(instance).to.be.a(akeyless.GatewayUpdateLogForwardingElasticsearch);
    });

    it('should have the property apiKey (base name: "api-key")', function() {
      // uncomment below and update the code to test the property apiKey
      //var instane = new akeyless.GatewayUpdateLogForwardingElasticsearch();
      //expect(instance).to.be();
    });

    it('should have the property authType (base name: "auth-type")', function() {
      // uncomment below and update the code to test the property authType
      //var instane = new akeyless.GatewayUpdateLogForwardingElasticsearch();
      //expect(instance).to.be();
    });

    it('should have the property cloudId (base name: "cloud-id")', function() {
      // uncomment below and update the code to test the property cloudId
      //var instane = new akeyless.GatewayUpdateLogForwardingElasticsearch();
      //expect(instance).to.be();
    });

    it('should have the property enable (base name: "enable")', function() {
      // uncomment below and update the code to test the property enable
      //var instane = new akeyless.GatewayUpdateLogForwardingElasticsearch();
      //expect(instance).to.be();
    });

    it('should have the property enableTls (base name: "enable-tls")', function() {
      // uncomment below and update the code to test the property enableTls
      //var instane = new akeyless.GatewayUpdateLogForwardingElasticsearch();
      //expect(instance).to.be();
    });

    it('should have the property index (base name: "index")', function() {
      // uncomment below and update the code to test the property index
      //var instane = new akeyless.GatewayUpdateLogForwardingElasticsearch();
      //expect(instance).to.be();
    });

    it('should have the property json (base name: "json")', function() {
      // uncomment below and update the code to test the property json
      //var instane = new akeyless.GatewayUpdateLogForwardingElasticsearch();
      //expect(instance).to.be();
    });

    it('should have the property nodes (base name: "nodes")', function() {
      // uncomment below and update the code to test the property nodes
      //var instane = new akeyless.GatewayUpdateLogForwardingElasticsearch();
      //expect(instance).to.be();
    });

    it('should have the property outputFormat (base name: "output-format")', function() {
      // uncomment below and update the code to test the property outputFormat
      //var instane = new akeyless.GatewayUpdateLogForwardingElasticsearch();
      //expect(instance).to.be();
    });

    it('should have the property password (base name: "password")', function() {
      // uncomment below and update the code to test the property password
      //var instane = new akeyless.GatewayUpdateLogForwardingElasticsearch();
      //expect(instance).to.be();
    });

    it('should have the property pullInterval (base name: "pull-interval")', function() {
      // uncomment below and update the code to test the property pullInterval
      //var instane = new akeyless.GatewayUpdateLogForwardingElasticsearch();
      //expect(instance).to.be();
    });

    it('should have the property serverType (base name: "server-type")', function() {
      // uncomment below and update the code to test the property serverType
      //var instane = new akeyless.GatewayUpdateLogForwardingElasticsearch();
      //expect(instance).to.be();
    });

    it('should have the property tlsCertificate (base name: "tls-certificate")', function() {
      // uncomment below and update the code to test the property tlsCertificate
      //var instane = new akeyless.GatewayUpdateLogForwardingElasticsearch();
      //expect(instance).to.be();
    });

    it('should have the property token (base name: "token")', function() {
      // uncomment below and update the code to test the property token
      //var instane = new akeyless.GatewayUpdateLogForwardingElasticsearch();
      //expect(instance).to.be();
    });

    it('should have the property uidToken (base name: "uid-token")', function() {
      // uncomment below and update the code to test the property uidToken
      //var instane = new akeyless.GatewayUpdateLogForwardingElasticsearch();
      //expect(instance).to.be();
    });

    it('should have the property userName (base name: "user-name")', function() {
      // uncomment below and update the code to test the property userName
      //var instane = new akeyless.GatewayUpdateLogForwardingElasticsearch();
      //expect(instance).to.be();
    });

  });

}));
