/**
 * includes all operations supported by Akeyless.
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.akl);
  }
}(this, function(expect, akl) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new akl.AuthMethodAccessInfo();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AuthMethodAccessInfo', function() {
    it('should create an instance of AuthMethodAccessInfo', function() {
      // uncomment below and update the code to test AuthMethodAccessInfo
      //var instane = new akl.AuthMethodAccessInfo();
      //expect(instance).to.be.a(akl.AuthMethodAccessInfo);
    });

    it('should have the property accessExpires (base name: "access_expires")', function() {
      // uncomment below and update the code to test the property accessExpires
      //var instane = new akl.AuthMethodAccessInfo();
      //expect(instance).to.be();
    });

    it('should have the property apiKeyAccessRules (base name: "api_key_access_rules")', function() {
      // uncomment below and update the code to test the property apiKeyAccessRules
      //var instane = new akl.AuthMethodAccessInfo();
      //expect(instance).to.be();
    });

    it('should have the property awsIamAccessRules (base name: "aws_iam_access_rules")', function() {
      // uncomment below and update the code to test the property awsIamAccessRules
      //var instane = new akl.AuthMethodAccessInfo();
      //expect(instance).to.be();
    });

    it('should have the property azureAdAccessRules (base name: "azure_ad_access_rules")', function() {
      // uncomment below and update the code to test the property azureAdAccessRules
      //var instane = new akl.AuthMethodAccessInfo();
      //expect(instance).to.be();
    });

    it('should have the property cidrWhitelist (base name: "cidr_whitelist")', function() {
      // uncomment below and update the code to test the property cidrWhitelist
      //var instane = new akl.AuthMethodAccessInfo();
      //expect(instance).to.be();
    });

    it('should have the property emailPassAccessRules (base name: "email_pass_access_rules")', function() {
      // uncomment below and update the code to test the property emailPassAccessRules
      //var instane = new akl.AuthMethodAccessInfo();
      //expect(instance).to.be();
    });

    it('should have the property huaweiAccessRules (base name: "huawei_access_rules")', function() {
      // uncomment below and update the code to test the property huaweiAccessRules
      //var instane = new akl.AuthMethodAccessInfo();
      //expect(instance).to.be();
    });

    it('should have the property ldapAccessRules (base name: "ldap_access_rules")', function() {
      // uncomment below and update the code to test the property ldapAccessRules
      //var instane = new akl.AuthMethodAccessInfo();
      //expect(instance).to.be();
    });

    it('should have the property oauth2AccessRules (base name: "oauth2_access_rules")', function() {
      // uncomment below and update the code to test the property oauth2AccessRules
      //var instane = new akl.AuthMethodAccessInfo();
      //expect(instance).to.be();
    });

    it('should have the property rulesType (base name: "rules_type")', function() {
      // uncomment below and update the code to test the property rulesType
      //var instane = new akl.AuthMethodAccessInfo();
      //expect(instance).to.be();
    });

    it('should have the property samlAccessRules (base name: "saml_access_rules")', function() {
      // uncomment below and update the code to test the property samlAccessRules
      //var instane = new akl.AuthMethodAccessInfo();
      //expect(instance).to.be();
    });

    it('should have the property universalIdentityAccessRules (base name: "universal_identity_access_rules")', function() {
      // uncomment below and update the code to test the property universalIdentityAccessRules
      //var instane = new akl.AuthMethodAccessInfo();
      //expect(instance).to.be();
    });

  });

}));
