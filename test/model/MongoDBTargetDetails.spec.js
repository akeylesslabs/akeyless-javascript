/**
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.akeyless);
  }
}(this, function(expect, akeyless) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new akeyless.MongoDBTargetDetails();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('MongoDBTargetDetails', function() {
    it('should create an instance of MongoDBTargetDetails', function() {
      // uncomment below and update the code to test MongoDBTargetDetails
      //var instane = new akeyless.MongoDBTargetDetails();
      //expect(instance).to.be.a(akeyless.MongoDBTargetDetails);
    });

    it('should have the property mongodbAtlasApiPrivateKey (base name: "mongodb_atlas_api_private_key")', function() {
      // uncomment below and update the code to test the property mongodbAtlasApiPrivateKey
      //var instane = new akeyless.MongoDBTargetDetails();
      //expect(instance).to.be();
    });

    it('should have the property mongodbAtlasApiPublicKey (base name: "mongodb_atlas_api_public_key")', function() {
      // uncomment below and update the code to test the property mongodbAtlasApiPublicKey
      //var instane = new akeyless.MongoDBTargetDetails();
      //expect(instance).to.be();
    });

    it('should have the property mongodbAtlasProjectId (base name: "mongodb_atlas_project_id")', function() {
      // uncomment below and update the code to test the property mongodbAtlasProjectId
      //var instane = new akeyless.MongoDBTargetDetails();
      //expect(instance).to.be();
    });

    it('should have the property mongodbDbName (base name: "mongodb_db_name")', function() {
      // uncomment below and update the code to test the property mongodbDbName
      //var instane = new akeyless.MongoDBTargetDetails();
      //expect(instance).to.be();
    });

    it('should have the property mongodbDefaultAuthDb (base name: "mongodb_default_auth_db")', function() {
      // uncomment below and update the code to test the property mongodbDefaultAuthDb
      //var instane = new akeyless.MongoDBTargetDetails();
      //expect(instance).to.be();
    });

    it('should have the property mongodbHostPort (base name: "mongodb_host_port")', function() {
      // uncomment below and update the code to test the property mongodbHostPort
      //var instane = new akeyless.MongoDBTargetDetails();
      //expect(instance).to.be();
    });

    it('should have the property mongodbIsAtlas (base name: "mongodb_is_atlas")', function() {
      // uncomment below and update the code to test the property mongodbIsAtlas
      //var instane = new akeyless.MongoDBTargetDetails();
      //expect(instance).to.be();
    });

    it('should have the property mongodbPassword (base name: "mongodb_password")', function() {
      // uncomment below and update the code to test the property mongodbPassword
      //var instane = new akeyless.MongoDBTargetDetails();
      //expect(instance).to.be();
    });

    it('should have the property mongodbUriConnection (base name: "mongodb_uri_connection")', function() {
      // uncomment below and update the code to test the property mongodbUriConnection
      //var instane = new akeyless.MongoDBTargetDetails();
      //expect(instance).to.be();
    });

    it('should have the property mongodbUriOptions (base name: "mongodb_uri_options")', function() {
      // uncomment below and update the code to test the property mongodbUriOptions
      //var instane = new akeyless.MongoDBTargetDetails();
      //expect(instance).to.be();
    });

    it('should have the property mongodbUsername (base name: "mongodb_username")', function() {
      // uncomment below and update the code to test the property mongodbUsername
      //var instane = new akeyless.MongoDBTargetDetails();
      //expect(instance).to.be();
    });

  });

}));
