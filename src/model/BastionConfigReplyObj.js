/**
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 3.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BastionGlobalConf from './BastionGlobalConf';
import SraDesktopAppConf from './SraDesktopAppConf';
import SshBastionConf from './SshBastionConf';
import WebBastionConf from './WebBastionConf';

/**
 * The BastionConfigReplyObj model module.
 * @module model/BastionConfigReplyObj
 * @version 5.0.8
 */
class BastionConfigReplyObj {
    /**
     * Constructs a new <code>BastionConfigReplyObj</code>.
     * @alias module:model/BastionConfigReplyObj
     */
    constructor() { 
        
        BastionConfigReplyObj.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BastionConfigReplyObj</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BastionConfigReplyObj} obj Optional instance to populate.
     * @return {module:model/BastionConfigReplyObj} The populated <code>BastionConfigReplyObj</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BastionConfigReplyObj();

            if (data.hasOwnProperty('cluster_id')) {
                obj['cluster_id'] = ApiClient.convertToType(data['cluster_id'], 'String');
            }
            if (data.hasOwnProperty('desktop_app')) {
                obj['desktop_app'] = SraDesktopAppConf.constructFromObject(data['desktop_app']);
            }
            if (data.hasOwnProperty('gator_cluster_id')) {
                obj['gator_cluster_id'] = ApiClient.convertToType(data['gator_cluster_id'], 'Number');
            }
            if (data.hasOwnProperty('global')) {
                obj['global'] = BastionGlobalConf.constructFromObject(data['global']);
            }
            if (data.hasOwnProperty('ssh_bastion')) {
                obj['ssh_bastion'] = SshBastionConf.constructFromObject(data['ssh_bastion']);
            }
            if (data.hasOwnProperty('web_bastion')) {
                obj['web_bastion'] = WebBastionConf.constructFromObject(data['web_bastion']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BastionConfigReplyObj</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BastionConfigReplyObj</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['cluster_id'] && !(typeof data['cluster_id'] === 'string' || data['cluster_id'] instanceof String)) {
            throw new Error("Expected the field `cluster_id` to be a primitive type in the JSON string but got " + data['cluster_id']);
        }
        // validate the optional field `desktop_app`
        if (data['desktop_app']) { // data not null
          SraDesktopAppConf.validateJSON(data['desktop_app']);
        }
        // validate the optional field `global`
        if (data['global']) { // data not null
          BastionGlobalConf.validateJSON(data['global']);
        }
        // validate the optional field `ssh_bastion`
        if (data['ssh_bastion']) { // data not null
          SshBastionConf.validateJSON(data['ssh_bastion']);
        }
        // validate the optional field `web_bastion`
        if (data['web_bastion']) { // data not null
          WebBastionConf.validateJSON(data['web_bastion']);
        }

        return true;
    }


}



/**
 * @member {String} cluster_id
 */
BastionConfigReplyObj.prototype['cluster_id'] = undefined;

/**
 * @member {module:model/SraDesktopAppConf} desktop_app
 */
BastionConfigReplyObj.prototype['desktop_app'] = undefined;

/**
 * @member {Number} gator_cluster_id
 */
BastionConfigReplyObj.prototype['gator_cluster_id'] = undefined;

/**
 * @member {module:model/BastionGlobalConf} global
 */
BastionConfigReplyObj.prototype['global'] = undefined;

/**
 * @member {module:model/SshBastionConf} ssh_bastion
 */
BastionConfigReplyObj.prototype['ssh_bastion'] = undefined;

/**
 * @member {module:model/WebBastionConf} web_bastion
 */
BastionConfigReplyObj.prototype['web_bastion'] = undefined;






export default BastionConfigReplyObj;

