/**
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 3.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OpenAITargetDetails model module.
 * @module model/OpenAITargetDetails
 * @version 5.0.9
 */
class OpenAITargetDetails {
    /**
     * Constructs a new <code>OpenAITargetDetails</code>.
     * OpenAITargetDetails defines details related to connecting to an OpenAI provider
     * @alias module:model/OpenAITargetDetails
     */
    constructor() { 
        
        OpenAITargetDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OpenAITargetDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OpenAITargetDetails} obj Optional instance to populate.
     * @return {module:model/OpenAITargetDetails} The populated <code>OpenAITargetDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OpenAITargetDetails();

            if (data.hasOwnProperty('api_key')) {
                obj['api_key'] = ApiClient.convertToType(data['api_key'], 'String');
            }
            if (data.hasOwnProperty('api_key_id')) {
                obj['api_key_id'] = ApiClient.convertToType(data['api_key_id'], 'String');
            }
            if (data.hasOwnProperty('openai_url')) {
                obj['openai_url'] = ApiClient.convertToType(data['openai_url'], 'String');
            }
            if (data.hasOwnProperty('organization_id')) {
                obj['organization_id'] = ApiClient.convertToType(data['organization_id'], 'String');
            }
            if (data.hasOwnProperty('project_id')) {
                obj['project_id'] = ApiClient.convertToType(data['project_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OpenAITargetDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OpenAITargetDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['api_key'] && !(typeof data['api_key'] === 'string' || data['api_key'] instanceof String)) {
            throw new Error("Expected the field `api_key` to be a primitive type in the JSON string but got " + data['api_key']);
        }
        // ensure the json data is a string
        if (data['api_key_id'] && !(typeof data['api_key_id'] === 'string' || data['api_key_id'] instanceof String)) {
            throw new Error("Expected the field `api_key_id` to be a primitive type in the JSON string but got " + data['api_key_id']);
        }
        // ensure the json data is a string
        if (data['openai_url'] && !(typeof data['openai_url'] === 'string' || data['openai_url'] instanceof String)) {
            throw new Error("Expected the field `openai_url` to be a primitive type in the JSON string but got " + data['openai_url']);
        }
        // ensure the json data is a string
        if (data['organization_id'] && !(typeof data['organization_id'] === 'string' || data['organization_id'] instanceof String)) {
            throw new Error("Expected the field `organization_id` to be a primitive type in the JSON string but got " + data['organization_id']);
        }
        // ensure the json data is a string
        if (data['project_id'] && !(typeof data['project_id'] === 'string' || data['project_id'] instanceof String)) {
            throw new Error("Expected the field `project_id` to be a primitive type in the JSON string but got " + data['project_id']);
        }

        return true;
    }


}



/**
 * @member {String} api_key
 */
OpenAITargetDetails.prototype['api_key'] = undefined;

/**
 * @member {String} api_key_id
 */
OpenAITargetDetails.prototype['api_key_id'] = undefined;

/**
 * @member {String} openai_url
 */
OpenAITargetDetails.prototype['openai_url'] = undefined;

/**
 * @member {String} organization_id
 */
OpenAITargetDetails.prototype['organization_id'] = undefined;

/**
 * @member {String} project_id
 */
OpenAITargetDetails.prototype['project_id'] = undefined;






export default OpenAITargetDetails;

