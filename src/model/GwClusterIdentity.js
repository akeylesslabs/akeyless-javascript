/**
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CfInfo from './CfInfo';

/**
 * The GwClusterIdentity model module.
 * @module model/GwClusterIdentity
 * @version 5.0.1
 */
class GwClusterIdentity {
    /**
     * Constructs a new <code>GwClusterIdentity</code>.
     * @alias module:model/GwClusterIdentity
     */
    constructor() { 
        
        GwClusterIdentity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GwClusterIdentity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GwClusterIdentity} obj Optional instance to populate.
     * @return {module:model/GwClusterIdentity} The populated <code>GwClusterIdentity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GwClusterIdentity();

            if (data.hasOwnProperty('action_allowed')) {
                obj['action_allowed'] = ApiClient.convertToType(data['action_allowed'], 'Boolean');
            }
            if (data.hasOwnProperty('allowed')) {
                obj['allowed'] = ApiClient.convertToType(data['allowed'], 'Boolean');
            }
            if (data.hasOwnProperty('allowed_access_ids')) {
                obj['allowed_access_ids'] = ApiClient.convertToType(data['allowed_access_ids'], ['String']);
            }
            if (data.hasOwnProperty('cluster_name')) {
                obj['cluster_name'] = ApiClient.convertToType(data['cluster_name'], 'String');
            }
            if (data.hasOwnProperty('cluster_url')) {
                obj['cluster_url'] = ApiClient.convertToType(data['cluster_url'], 'String');
            }
            if (data.hasOwnProperty('current_gw')) {
                obj['current_gw'] = ApiClient.convertToType(data['current_gw'], 'Boolean');
            }
            if (data.hasOwnProperty('customer_fragment_ids')) {
                obj['customer_fragment_ids'] = ApiClient.convertToType(data['customer_fragment_ids'], ['String']);
            }
            if (data.hasOwnProperty('customer_fragments')) {
                obj['customer_fragments'] = ApiClient.convertToType(data['customer_fragments'], [CfInfo]);
            }
            if (data.hasOwnProperty('default_protection_key_id')) {
                obj['default_protection_key_id'] = ApiClient.convertToType(data['default_protection_key_id'], 'Number');
            }
            if (data.hasOwnProperty('default_secret_location')) {
                obj['default_secret_location'] = ApiClient.convertToType(data['default_secret_location'], 'String');
            }
            if (data.hasOwnProperty('display_name')) {
                obj['display_name'] = ApiClient.convertToType(data['display_name'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('is_kerberos_auth_enabled')) {
                obj['is_kerberos_auth_enabled'] = ApiClient.convertToType(data['is_kerberos_auth_enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('is_ldap_auth_enabled')) {
                obj['is_ldap_auth_enabled'] = ApiClient.convertToType(data['is_ldap_auth_enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('serverless_type')) {
                obj['serverless_type'] = ApiClient.convertToType(data['serverless_type'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('status_description')) {
                obj['status_description'] = ApiClient.convertToType(data['status_description'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GwClusterIdentity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GwClusterIdentity</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['allowed_access_ids'])) {
            throw new Error("Expected the field `allowed_access_ids` to be an array in the JSON data but got " + data['allowed_access_ids']);
        }
        // ensure the json data is a string
        if (data['cluster_name'] && !(typeof data['cluster_name'] === 'string' || data['cluster_name'] instanceof String)) {
            throw new Error("Expected the field `cluster_name` to be a primitive type in the JSON string but got " + data['cluster_name']);
        }
        // ensure the json data is a string
        if (data['cluster_url'] && !(typeof data['cluster_url'] === 'string' || data['cluster_url'] instanceof String)) {
            throw new Error("Expected the field `cluster_url` to be a primitive type in the JSON string but got " + data['cluster_url']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['customer_fragment_ids'])) {
            throw new Error("Expected the field `customer_fragment_ids` to be an array in the JSON data but got " + data['customer_fragment_ids']);
        }
        if (data['customer_fragments']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['customer_fragments'])) {
                throw new Error("Expected the field `customer_fragments` to be an array in the JSON data but got " + data['customer_fragments']);
            }
            // validate the optional field `customer_fragments` (array)
            for (const item of data['customer_fragments']) {
                CfInfo.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['default_secret_location'] && !(typeof data['default_secret_location'] === 'string' || data['default_secret_location'] instanceof String)) {
            throw new Error("Expected the field `default_secret_location` to be a primitive type in the JSON string but got " + data['default_secret_location']);
        }
        // ensure the json data is a string
        if (data['display_name'] && !(typeof data['display_name'] === 'string' || data['display_name'] instanceof String)) {
            throw new Error("Expected the field `display_name` to be a primitive type in the JSON string but got " + data['display_name']);
        }
        // ensure the json data is a string
        if (data['serverless_type'] && !(typeof data['serverless_type'] === 'string' || data['serverless_type'] instanceof String)) {
            throw new Error("Expected the field `serverless_type` to be a primitive type in the JSON string but got " + data['serverless_type']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['status_description'] && !(typeof data['status_description'] === 'string' || data['status_description'] instanceof String)) {
            throw new Error("Expected the field `status_description` to be a primitive type in the JSON string but got " + data['status_description']);
        }

        return true;
    }


}



/**
 * @member {Boolean} action_allowed
 */
GwClusterIdentity.prototype['action_allowed'] = undefined;

/**
 * @member {Boolean} allowed
 */
GwClusterIdentity.prototype['allowed'] = undefined;

/**
 * @member {Array.<String>} allowed_access_ids
 */
GwClusterIdentity.prototype['allowed_access_ids'] = undefined;

/**
 * @member {String} cluster_name
 */
GwClusterIdentity.prototype['cluster_name'] = undefined;

/**
 * @member {String} cluster_url
 */
GwClusterIdentity.prototype['cluster_url'] = undefined;

/**
 * @member {Boolean} current_gw
 */
GwClusterIdentity.prototype['current_gw'] = undefined;

/**
 * Deprecated - use CustomerFragments instead
 * @member {Array.<String>} customer_fragment_ids
 */
GwClusterIdentity.prototype['customer_fragment_ids'] = undefined;

/**
 * @member {Array.<module:model/CfInfo>} customer_fragments
 */
GwClusterIdentity.prototype['customer_fragments'] = undefined;

/**
 * @member {Number} default_protection_key_id
 */
GwClusterIdentity.prototype['default_protection_key_id'] = undefined;

/**
 * @member {String} default_secret_location
 */
GwClusterIdentity.prototype['default_secret_location'] = undefined;

/**
 * @member {String} display_name
 */
GwClusterIdentity.prototype['display_name'] = undefined;

/**
 * @member {Number} id
 */
GwClusterIdentity.prototype['id'] = undefined;

/**
 * @member {Boolean} is_kerberos_auth_enabled
 */
GwClusterIdentity.prototype['is_kerberos_auth_enabled'] = undefined;

/**
 * @member {Boolean} is_ldap_auth_enabled
 */
GwClusterIdentity.prototype['is_ldap_auth_enabled'] = undefined;

/**
 * @member {String} serverless_type
 */
GwClusterIdentity.prototype['serverless_type'] = undefined;

/**
 * @member {String} status
 */
GwClusterIdentity.prototype['status'] = undefined;

/**
 * @member {String} status_description
 */
GwClusterIdentity.prototype['status_description'] = undefined;






export default GwClusterIdentity;

