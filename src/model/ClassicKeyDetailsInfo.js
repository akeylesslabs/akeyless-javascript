/**
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 3.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ClassicKeyTargetInfo from './ClassicKeyTargetInfo';

/**
 * The ClassicKeyDetailsInfo model module.
 * @module model/ClassicKeyDetailsInfo
 * @version 5.0.10
 */
class ClassicKeyDetailsInfo {
    /**
     * Constructs a new <code>ClassicKeyDetailsInfo</code>.
     * @alias module:model/ClassicKeyDetailsInfo
     */
    constructor() { 
        
        ClassicKeyDetailsInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ClassicKeyDetailsInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ClassicKeyDetailsInfo} obj Optional instance to populate.
     * @return {module:model/ClassicKeyDetailsInfo} The populated <code>ClassicKeyDetailsInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClassicKeyDetailsInfo();

            if (data.hasOwnProperty('classic_key_attributes')) {
                obj['classic_key_attributes'] = ApiClient.convertToType(data['classic_key_attributes'], {'String': ['String']});
            }
            if (data.hasOwnProperty('classic_key_id')) {
                obj['classic_key_id'] = ApiClient.convertToType(data['classic_key_id'], 'String');
            }
            if (data.hasOwnProperty('credential_id')) {
                obj['credential_id'] = ApiClient.convertToType(data['credential_id'], 'String');
            }
            if (data.hasOwnProperty('gw_cluster_id')) {
                obj['gw_cluster_id'] = ApiClient.convertToType(data['gw_cluster_id'], 'Number');
            }
            if (data.hasOwnProperty('has_certificate')) {
                obj['has_certificate'] = ApiClient.convertToType(data['has_certificate'], 'Boolean');
            }
            if (data.hasOwnProperty('is_provided_by_user')) {
                obj['is_provided_by_user'] = ApiClient.convertToType(data['is_provided_by_user'], 'Boolean');
            }
            if (data.hasOwnProperty('is_unexportable')) {
                obj['is_unexportable'] = ApiClient.convertToType(data['is_unexportable'], 'Boolean');
            }
            if (data.hasOwnProperty('key_state')) {
                obj['key_state'] = ApiClient.convertToType(data['key_state'], 'String');
            }
            if (data.hasOwnProperty('key_type')) {
                obj['key_type'] = ApiClient.convertToType(data['key_type'], 'String');
            }
            if (data.hasOwnProperty('last_error')) {
                obj['last_error'] = ApiClient.convertToType(data['last_error'], 'String');
            }
            if (data.hasOwnProperty('public_key')) {
                obj['public_key'] = ApiClient.convertToType(data['public_key'], 'String');
            }
            if (data.hasOwnProperty('target_alias_helper')) {
                obj['target_alias_helper'] = ApiClient.convertToType(data['target_alias_helper'], 'String');
            }
            if (data.hasOwnProperty('target_types')) {
                obj['target_types'] = ApiClient.convertToType(data['target_types'], ['String']);
            }
            if (data.hasOwnProperty('targets')) {
                obj['targets'] = ApiClient.convertToType(data['targets'], [ClassicKeyTargetInfo]);
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
            if (data.hasOwnProperty('websites')) {
                obj['websites'] = ApiClient.convertToType(data['websites'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ClassicKeyDetailsInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ClassicKeyDetailsInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['classic_key_id'] && !(typeof data['classic_key_id'] === 'string' || data['classic_key_id'] instanceof String)) {
            throw new Error("Expected the field `classic_key_id` to be a primitive type in the JSON string but got " + data['classic_key_id']);
        }
        // ensure the json data is a string
        if (data['credential_id'] && !(typeof data['credential_id'] === 'string' || data['credential_id'] instanceof String)) {
            throw new Error("Expected the field `credential_id` to be a primitive type in the JSON string but got " + data['credential_id']);
        }
        // ensure the json data is a string
        if (data['key_state'] && !(typeof data['key_state'] === 'string' || data['key_state'] instanceof String)) {
            throw new Error("Expected the field `key_state` to be a primitive type in the JSON string but got " + data['key_state']);
        }
        // ensure the json data is a string
        if (data['key_type'] && !(typeof data['key_type'] === 'string' || data['key_type'] instanceof String)) {
            throw new Error("Expected the field `key_type` to be a primitive type in the JSON string but got " + data['key_type']);
        }
        // ensure the json data is a string
        if (data['last_error'] && !(typeof data['last_error'] === 'string' || data['last_error'] instanceof String)) {
            throw new Error("Expected the field `last_error` to be a primitive type in the JSON string but got " + data['last_error']);
        }
        // ensure the json data is a string
        if (data['public_key'] && !(typeof data['public_key'] === 'string' || data['public_key'] instanceof String)) {
            throw new Error("Expected the field `public_key` to be a primitive type in the JSON string but got " + data['public_key']);
        }
        // ensure the json data is a string
        if (data['target_alias_helper'] && !(typeof data['target_alias_helper'] === 'string' || data['target_alias_helper'] instanceof String)) {
            throw new Error("Expected the field `target_alias_helper` to be a primitive type in the JSON string but got " + data['target_alias_helper']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['target_types'])) {
            throw new Error("Expected the field `target_types` to be an array in the JSON data but got " + data['target_types']);
        }
        if (data['targets']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['targets'])) {
                throw new Error("Expected the field `targets` to be an array in the JSON data but got " + data['targets']);
            }
            // validate the optional field `targets` (array)
            for (const item of data['targets']) {
                ClassicKeyTargetInfo.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['username'] && !(typeof data['username'] === 'string' || data['username'] instanceof String)) {
            throw new Error("Expected the field `username` to be a primitive type in the JSON string but got " + data['username']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['websites'])) {
            throw new Error("Expected the field `websites` to be an array in the JSON data but got " + data['websites']);
        }

        return true;
    }


}



/**
 * @member {Object.<String, Array.<String>>} classic_key_attributes
 */
ClassicKeyDetailsInfo.prototype['classic_key_attributes'] = undefined;

/**
 * @member {String} classic_key_id
 */
ClassicKeyDetailsInfo.prototype['classic_key_id'] = undefined;

/**
 * @member {String} credential_id
 */
ClassicKeyDetailsInfo.prototype['credential_id'] = undefined;

/**
 * @member {Number} gw_cluster_id
 */
ClassicKeyDetailsInfo.prototype['gw_cluster_id'] = undefined;

/**
 * @member {Boolean} has_certificate
 */
ClassicKeyDetailsInfo.prototype['has_certificate'] = undefined;

/**
 * @member {Boolean} is_provided_by_user
 */
ClassicKeyDetailsInfo.prototype['is_provided_by_user'] = undefined;

/**
 * @member {Boolean} is_unexportable
 */
ClassicKeyDetailsInfo.prototype['is_unexportable'] = undefined;

/**
 * ItemState defines the different states an Item can be in
 * @member {String} key_state
 */
ClassicKeyDetailsInfo.prototype['key_state'] = undefined;

/**
 * @member {String} key_type
 */
ClassicKeyDetailsInfo.prototype['key_type'] = undefined;

/**
 * @member {String} last_error
 */
ClassicKeyDetailsInfo.prototype['last_error'] = undefined;

/**
 * @member {String} public_key
 */
ClassicKeyDetailsInfo.prototype['public_key'] = undefined;

/**
 * @member {String} target_alias_helper
 */
ClassicKeyDetailsInfo.prototype['target_alias_helper'] = undefined;

/**
 * @member {Array.<String>} target_types
 */
ClassicKeyDetailsInfo.prototype['target_types'] = undefined;

/**
 * @member {Array.<module:model/ClassicKeyTargetInfo>} targets
 */
ClassicKeyDetailsInfo.prototype['targets'] = undefined;

/**
 * @member {String} username
 */
ClassicKeyDetailsInfo.prototype['username'] = undefined;

/**
 * @member {Array.<String>} websites
 */
ClassicKeyDetailsInfo.prototype['websites'] = undefined;






export default ClassicKeyDetailsInfo;

