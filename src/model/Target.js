/**
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 3.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ItemVersion from './ItemVersion';
import TargetItemAssociation from './TargetItemAssociation';

/**
 * The Target model module.
 * @module model/Target
 * @version 5.0.0
 */
class Target {
    /**
     * Constructs a new <code>Target</code>.
     * @alias module:model/Target
     */
    constructor() { 
        
        Target.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Target</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Target} obj Optional instance to populate.
     * @return {module:model/Target} The populated <code>Target</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Target();

            if (data.hasOwnProperty('access_date')) {
                obj['access_date'] = ApiClient.convertToType(data['access_date'], 'Date');
            }
            if (data.hasOwnProperty('access_date_display')) {
                obj['access_date_display'] = ApiClient.convertToType(data['access_date_display'], 'String');
            }
            if (data.hasOwnProperty('access_request_status')) {
                obj['access_request_status'] = ApiClient.convertToType(data['access_request_status'], 'String');
            }
            if (data.hasOwnProperty('attributes')) {
                obj['attributes'] = ApiClient.convertToType(data['attributes'], {'String': Object});
            }
            if (data.hasOwnProperty('client_permissions')) {
                obj['client_permissions'] = ApiClient.convertToType(data['client_permissions'], ['String']);
            }
            if (data.hasOwnProperty('comment')) {
                obj['comment'] = ApiClient.convertToType(data['comment'], 'String');
            }
            if (data.hasOwnProperty('creation_date')) {
                obj['creation_date'] = ApiClient.convertToType(data['creation_date'], 'Date');
            }
            if (data.hasOwnProperty('credentials_less')) {
                obj['credentials_less'] = ApiClient.convertToType(data['credentials_less'], 'Boolean');
            }
            if (data.hasOwnProperty('is_access_request_enabled')) {
                obj['is_access_request_enabled'] = ApiClient.convertToType(data['is_access_request_enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('last_version')) {
                obj['last_version'] = ApiClient.convertToType(data['last_version'], 'Number');
            }
            if (data.hasOwnProperty('modification_date')) {
                obj['modification_date'] = ApiClient.convertToType(data['modification_date'], 'Date');
            }
            if (data.hasOwnProperty('protection_key_name')) {
                obj['protection_key_name'] = ApiClient.convertToType(data['protection_key_name'], 'String');
            }
            if (data.hasOwnProperty('target_details')) {
                obj['target_details'] = ApiClient.convertToType(data['target_details'], 'String');
            }
            if (data.hasOwnProperty('target_id')) {
                obj['target_id'] = ApiClient.convertToType(data['target_id'], 'Number');
            }
            if (data.hasOwnProperty('target_items_assoc')) {
                obj['target_items_assoc'] = ApiClient.convertToType(data['target_items_assoc'], [TargetItemAssociation]);
            }
            if (data.hasOwnProperty('target_name')) {
                obj['target_name'] = ApiClient.convertToType(data['target_name'], 'String');
            }
            if (data.hasOwnProperty('target_sub_type')) {
                obj['target_sub_type'] = ApiClient.convertToType(data['target_sub_type'], 'String');
            }
            if (data.hasOwnProperty('target_type')) {
                obj['target_type'] = ApiClient.convertToType(data['target_type'], 'String');
            }
            if (data.hasOwnProperty('target_versions')) {
                obj['target_versions'] = ApiClient.convertToType(data['target_versions'], [ItemVersion]);
            }
            if (data.hasOwnProperty('with_customer_fragment')) {
                obj['with_customer_fragment'] = ApiClient.convertToType(data['with_customer_fragment'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Target</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Target</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['access_date_display'] && !(typeof data['access_date_display'] === 'string' || data['access_date_display'] instanceof String)) {
            throw new Error("Expected the field `access_date_display` to be a primitive type in the JSON string but got " + data['access_date_display']);
        }
        // ensure the json data is a string
        if (data['access_request_status'] && !(typeof data['access_request_status'] === 'string' || data['access_request_status'] instanceof String)) {
            throw new Error("Expected the field `access_request_status` to be a primitive type in the JSON string but got " + data['access_request_status']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['client_permissions'])) {
            throw new Error("Expected the field `client_permissions` to be an array in the JSON data but got " + data['client_permissions']);
        }
        // ensure the json data is a string
        if (data['comment'] && !(typeof data['comment'] === 'string' || data['comment'] instanceof String)) {
            throw new Error("Expected the field `comment` to be a primitive type in the JSON string but got " + data['comment']);
        }
        // ensure the json data is a string
        if (data['protection_key_name'] && !(typeof data['protection_key_name'] === 'string' || data['protection_key_name'] instanceof String)) {
            throw new Error("Expected the field `protection_key_name` to be a primitive type in the JSON string but got " + data['protection_key_name']);
        }
        // ensure the json data is a string
        if (data['target_details'] && !(typeof data['target_details'] === 'string' || data['target_details'] instanceof String)) {
            throw new Error("Expected the field `target_details` to be a primitive type in the JSON string but got " + data['target_details']);
        }
        if (data['target_items_assoc']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['target_items_assoc'])) {
                throw new Error("Expected the field `target_items_assoc` to be an array in the JSON data but got " + data['target_items_assoc']);
            }
            // validate the optional field `target_items_assoc` (array)
            for (const item of data['target_items_assoc']) {
                TargetItemAssociation.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['target_name'] && !(typeof data['target_name'] === 'string' || data['target_name'] instanceof String)) {
            throw new Error("Expected the field `target_name` to be a primitive type in the JSON string but got " + data['target_name']);
        }
        // ensure the json data is a string
        if (data['target_sub_type'] && !(typeof data['target_sub_type'] === 'string' || data['target_sub_type'] instanceof String)) {
            throw new Error("Expected the field `target_sub_type` to be a primitive type in the JSON string but got " + data['target_sub_type']);
        }
        // ensure the json data is a string
        if (data['target_type'] && !(typeof data['target_type'] === 'string' || data['target_type'] instanceof String)) {
            throw new Error("Expected the field `target_type` to be a primitive type in the JSON string but got " + data['target_type']);
        }
        if (data['target_versions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['target_versions'])) {
                throw new Error("Expected the field `target_versions` to be an array in the JSON data but got " + data['target_versions']);
            }
            // validate the optional field `target_versions` (array)
            for (const item of data['target_versions']) {
                ItemVersion.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Date} access_date
 */
Target.prototype['access_date'] = undefined;

/**
 * @member {String} access_date_display
 */
Target.prototype['access_date_display'] = undefined;

/**
 * @member {String} access_request_status
 */
Target.prototype['access_request_status'] = undefined;

/**
 * this is not \"omitempty\" since an empty value causes no update while an empty map will clear the attributes
 * @member {Object.<String, Object>} attributes
 */
Target.prototype['attributes'] = undefined;

/**
 * @member {Array.<String>} client_permissions
 */
Target.prototype['client_permissions'] = undefined;

/**
 * @member {String} comment
 */
Target.prototype['comment'] = undefined;

/**
 * @member {Date} creation_date
 */
Target.prototype['creation_date'] = undefined;

/**
 * @member {Boolean} credentials_less
 */
Target.prototype['credentials_less'] = undefined;

/**
 * @member {Boolean} is_access_request_enabled
 */
Target.prototype['is_access_request_enabled'] = undefined;

/**
 * @member {Number} last_version
 */
Target.prototype['last_version'] = undefined;

/**
 * @member {Date} modification_date
 */
Target.prototype['modification_date'] = undefined;

/**
 * @member {String} protection_key_name
 */
Target.prototype['protection_key_name'] = undefined;

/**
 * @member {String} target_details
 */
Target.prototype['target_details'] = undefined;

/**
 * @member {Number} target_id
 */
Target.prototype['target_id'] = undefined;

/**
 * @member {Array.<module:model/TargetItemAssociation>} target_items_assoc
 */
Target.prototype['target_items_assoc'] = undefined;

/**
 * @member {String} target_name
 */
Target.prototype['target_name'] = undefined;

/**
 * @member {String} target_sub_type
 */
Target.prototype['target_sub_type'] = undefined;

/**
 * @member {String} target_type
 */
Target.prototype['target_type'] = undefined;

/**
 * @member {Array.<module:model/ItemVersion>} target_versions
 */
Target.prototype['target_versions'] = undefined;

/**
 * @member {Boolean} with_customer_fragment
 */
Target.prototype['with_customer_fragment'] = undefined;






export default Target;

