/**
 * includes all operations supported by Akeyless.
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Configure model module.
 * @module model/Configure
 * @version 0.0.1
 */
class Configure {
    /**
     * Constructs a new <code>Configure</code>.
     * @alias module:model/Configure
     */
    constructor() { 
        
        Configure.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Configure</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Configure} obj Optional instance to populate.
     * @return {module:model/Configure} The populated <code>Configure</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Configure();

            if (data.hasOwnProperty('access-id')) {
                obj['access-id'] = ApiClient.convertToType(data['access-id'], 'String');
            }
            if (data.hasOwnProperty('access-key')) {
                obj['access-key'] = ApiClient.convertToType(data['access-key'], 'String');
            }
            if (data.hasOwnProperty('access-type')) {
                obj['access-type'] = ApiClient.convertToType(data['access-type'], 'String');
            }
            if (data.hasOwnProperty('admin-email')) {
                obj['admin-email'] = ApiClient.convertToType(data['admin-email'], 'String');
            }
            if (data.hasOwnProperty('admin-password')) {
                obj['admin-password'] = ApiClient.convertToType(data['admin-password'], 'String');
            }
            if (data.hasOwnProperty('azure_ad_object_id')) {
                obj['azure_ad_object_id'] = ApiClient.convertToType(data['azure_ad_object_id'], 'String');
            }
            if (data.hasOwnProperty('ldap_proxy_url')) {
                obj['ldap_proxy_url'] = ApiClient.convertToType(data['ldap_proxy_url'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Access ID
 * @member {String} access-id
 */
Configure.prototype['access-id'] = undefined;

/**
 * Access Key
 * @member {String} access-key
 */
Configure.prototype['access-key'] = undefined;

/**
 * Access Type (access_key/password/azure_ad/saml/ldap/aws_iam)
 * @member {String} access-type
 * @default 'access_key'
 */
Configure.prototype['access-type'] = 'access_key';

/**
 * Email (relevant only for access-type=password)
 * @member {String} admin-email
 */
Configure.prototype['admin-email'] = undefined;

/**
 * Password (relevant only for access-type=password)
 * @member {String} admin-password
 */
Configure.prototype['admin-password'] = undefined;

/**
 * Azure Active Directory ObjectId (relevant only for access-type=azure_ad)
 * @member {String} azure_ad_object_id
 */
Configure.prototype['azure_ad_object_id'] = undefined;

/**
 * Address URL for ldap proxy (relevant only for access-type=ldap)
 * @member {String} ldap_proxy_url
 */
Configure.prototype['ldap_proxy_url'] = undefined;






export default Configure;

