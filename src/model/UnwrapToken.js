/**
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 3.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UnwrapToken model module.
 * @module model/UnwrapToken
 * @version 5.0.11
 */
class UnwrapToken {
    /**
     * Constructs a new <code>UnwrapToken</code>.
     * @alias module:model/UnwrapToken
     * @param sharedToken {String} The shared token
     */
    constructor(sharedToken) { 
        
        UnwrapToken.initialize(this, sharedToken);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, sharedToken) { 
        obj['json'] = false;
        obj['shared-token'] = sharedToken;
    }

    /**
     * Constructs a <code>UnwrapToken</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UnwrapToken} obj Optional instance to populate.
     * @return {module:model/UnwrapToken} The populated <code>UnwrapToken</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UnwrapToken();

            if (data.hasOwnProperty('json')) {
                obj['json'] = ApiClient.convertToType(data['json'], 'Boolean');
            }
            if (data.hasOwnProperty('shared-token')) {
                obj['shared-token'] = ApiClient.convertToType(data['shared-token'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UnwrapToken</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UnwrapToken</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UnwrapToken.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['shared-token'] && !(typeof data['shared-token'] === 'string' || data['shared-token'] instanceof String)) {
            throw new Error("Expected the field `shared-token` to be a primitive type in the JSON string but got " + data['shared-token']);
        }

        return true;
    }


}

UnwrapToken.RequiredProperties = ["shared-token"];

/**
 * Set output format to JSON
 * @member {Boolean} json
 * @default false
 */
UnwrapToken.prototype['json'] = false;

/**
 * The shared token
 * @member {String} shared-token
 */
UnwrapToken.prototype['shared-token'] = undefined;






export default UnwrapToken;

