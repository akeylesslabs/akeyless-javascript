/**
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 3.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ItemSraStatus model module.
 * @module model/ItemSraStatus
 * @version 5.0.7
 */
class ItemSraStatus {
    /**
     * Constructs a new <code>ItemSraStatus</code>.
     * @alias module:model/ItemSraStatus
     */
    constructor() { 
        
        ItemSraStatus.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ItemSraStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ItemSraStatus} obj Optional instance to populate.
     * @return {module:model/ItemSraStatus} The populated <code>ItemSraStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ItemSraStatus();

            if (data.hasOwnProperty('count_by_host_info')) {
                obj['count_by_host_info'] = ApiClient.convertToType(data['count_by_host_info'], {'String': 'Number'});
            }
            if (data.hasOwnProperty('count_info')) {
                obj['count_info'] = ApiClient.convertToType(data['count_info'], {'String': {'String': 'Number'}});
            }
            if (data.hasOwnProperty('hosts_in_use')) {
                obj['hosts_in_use'] = ApiClient.convertToType(data['hosts_in_use'], ['String']);
            }
            if (data.hasOwnProperty('is_in_use')) {
                obj['is_in_use'] = ApiClient.convertToType(data['is_in_use'], 'Boolean');
            }
            if (data.hasOwnProperty('last_used_item')) {
                obj['last_used_item'] = ApiClient.convertToType(data['last_used_item'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ItemSraStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ItemSraStatus</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['hosts_in_use'])) {
            throw new Error("Expected the field `hosts_in_use` to be an array in the JSON data but got " + data['hosts_in_use']);
        }

        return true;
    }


}



/**
 * @member {Object.<String, Number>} count_by_host_info
 */
ItemSraStatus.prototype['count_by_host_info'] = undefined;

/**
 * @member {Object.<String, Object.<String, Number>>} count_info
 */
ItemSraStatus.prototype['count_info'] = undefined;

/**
 * @member {Array.<String>} hosts_in_use
 */
ItemSraStatus.prototype['hosts_in_use'] = undefined;

/**
 * @member {Boolean} is_in_use
 */
ItemSraStatus.prototype['is_in_use'] = undefined;

/**
 * @member {Date} last_used_item
 */
ItemSraStatus.prototype['last_used_item'] = undefined;






export default ItemSraStatus;

