/**
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RuleAssigner from './RuleAssigner';

/**
 * The SharingItemFullInfo model module.
 * @module model/SharingItemFullInfo
 * @version 5.0.2
 */
class SharingItemFullInfo {
    /**
     * Constructs a new <code>SharingItemFullInfo</code>.
     * @alias module:model/SharingItemFullInfo
     */
    constructor() { 
        
        SharingItemFullInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SharingItemFullInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SharingItemFullInfo} obj Optional instance to populate.
     * @return {module:model/SharingItemFullInfo} The populated <code>SharingItemFullInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SharingItemFullInfo();

            if (data.hasOwnProperty('assigners')) {
                obj['assigners'] = ApiClient.convertToType(data['assigners'], [RuleAssigner]);
            }
            if (data.hasOwnProperty('capabilities')) {
                obj['capabilities'] = ApiClient.convertToType(data['capabilities'], ['String']);
            }
            if (data.hasOwnProperty('cb')) {
                obj['cb'] = ApiClient.convertToType(data['cb'], 'Number');
            }
            if (data.hasOwnProperty('is_limit_access')) {
                obj['is_limit_access'] = ApiClient.convertToType(data['is_limit_access'], 'Boolean');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('number_of_access_used')) {
                obj['number_of_access_used'] = ApiClient.convertToType(data['number_of_access_used'], 'Number');
            }
            if (data.hasOwnProperty('number_of_allowed_access')) {
                obj['number_of_allowed_access'] = ApiClient.convertToType(data['number_of_allowed_access'], 'Number');
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
            if (data.hasOwnProperty('start_time')) {
                obj['start_time'] = ApiClient.convertToType(data['start_time'], 'Number');
            }
            if (data.hasOwnProperty('ttl')) {
                obj['ttl'] = ApiClient.convertToType(data['ttl'], 'Number');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SharingItemFullInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SharingItemFullInfo</code>.
     */
    static validateJSON(data) {
        if (data['assigners']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['assigners'])) {
                throw new Error("Expected the field `assigners` to be an array in the JSON data but got " + data['assigners']);
            }
            // validate the optional field `assigners` (array)
            for (const item of data['assigners']) {
                RuleAssigner.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['capabilities'])) {
            throw new Error("Expected the field `capabilities` to be an array in the JSON data but got " + data['capabilities']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['path'] && !(typeof data['path'] === 'string' || data['path'] instanceof String)) {
            throw new Error("Expected the field `path` to be a primitive type in the JSON string but got " + data['path']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/RuleAssigner>} assigners
 */
SharingItemFullInfo.prototype['assigners'] = undefined;

/**
 * The approved/denied capabilities in the path
 * @member {Array.<String>} capabilities
 */
SharingItemFullInfo.prototype['capabilities'] = undefined;

/**
 * @member {Number} cb
 */
SharingItemFullInfo.prototype['cb'] = undefined;

/**
 * flag that indicate that this rule is allowed to be access RemainingAccess of times.
 * @member {Boolean} is_limit_access
 */
SharingItemFullInfo.prototype['is_limit_access'] = undefined;

/**
 * @member {String} name
 */
SharingItemFullInfo.prototype['name'] = undefined;

/**
 * @member {Number} number_of_access_used
 */
SharingItemFullInfo.prototype['number_of_access_used'] = undefined;

/**
 * @member {Number} number_of_allowed_access
 */
SharingItemFullInfo.prototype['number_of_allowed_access'] = undefined;

/**
 * The path the rule refers to
 * @member {String} path
 */
SharingItemFullInfo.prototype['path'] = undefined;

/**
 * @member {Number} start_time
 */
SharingItemFullInfo.prototype['start_time'] = undefined;

/**
 * @member {Number} ttl
 */
SharingItemFullInfo.prototype['ttl'] = undefined;

/**
 * @member {String} type
 */
SharingItemFullInfo.prototype['type'] = undefined;






export default SharingItemFullInfo;

