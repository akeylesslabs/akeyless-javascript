/**
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 3.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GenCustomerFragment model module.
 * @module model/GenCustomerFragment
 * @version 5.0.7
 */
class GenCustomerFragment {
    /**
     * Constructs a new <code>GenCustomerFragment</code>.
     * @alias module:model/GenCustomerFragment
     */
    constructor() { 
        
        GenCustomerFragment.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['json'] = false;
        obj['type'] = 'standard';
    }

    /**
     * Constructs a <code>GenCustomerFragment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GenCustomerFragment} obj Optional instance to populate.
     * @return {module:model/GenCustomerFragment} The populated <code>GenCustomerFragment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GenCustomerFragment();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('hsm-key-label')) {
                obj['hsm-key-label'] = ApiClient.convertToType(data['hsm-key-label'], 'String');
            }
            if (data.hasOwnProperty('json')) {
                obj['json'] = ApiClient.convertToType(data['json'], 'Boolean');
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GenCustomerFragment</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GenCustomerFragment</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['hsm-key-label'] && !(typeof data['hsm-key-label'] === 'string' || data['hsm-key-label'] instanceof String)) {
            throw new Error("Expected the field `hsm-key-label` to be a primitive type in the JSON string but got " + data['hsm-key-label']);
        }
        // ensure the json data is a string
        if (data['metadata'] && !(typeof data['metadata'] === 'string' || data['metadata'] instanceof String)) {
            throw new Error("Expected the field `metadata` to be a primitive type in the JSON string but got " + data['metadata']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * Description of the object
 * @member {String} description
 */
GenCustomerFragment.prototype['description'] = undefined;

/**
 * The label of the hsm key to use for customer fragment operations (relevant for hsm_wrapped/hsm_protected customer fragments)
 * @member {String} hsm-key-label
 */
GenCustomerFragment.prototype['hsm-key-label'] = undefined;

/**
 * Set output format to JSON
 * @member {Boolean} json
 * @default false
 */
GenCustomerFragment.prototype['json'] = false;

/**
 * Deprecated - use description
 * @member {String} metadata
 */
GenCustomerFragment.prototype['metadata'] = undefined;

/**
 * Customer fragment name
 * @member {String} name
 */
GenCustomerFragment.prototype['name'] = undefined;

/**
 * Customer fragment type [standard/hsm_wrapped/hsm_secured]
 * @member {String} type
 * @default 'standard'
 */
GenCustomerFragment.prototype['type'] = 'standard';






export default GenCustomerFragment;

