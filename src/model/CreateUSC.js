/**
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateUSC model module.
 * @module model/CreateUSC
 * @version 5.0.1
 */
class CreateUSC {
    /**
     * Constructs a new <code>CreateUSC</code>.
     * CreateUSC is a command that creates a Universal Secrets Connector
     * @alias module:model/CreateUSC
     * @param name {String} Universal Secrets Connector name
     * @param targetToAssociate {String} Target Universal Secrets Connector to connect
     */
    constructor(name, targetToAssociate) { 
        
        CreateUSC.initialize(this, name, targetToAssociate);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, targetToAssociate) { 
        obj['json'] = false;
        obj['name'] = name;
        obj['target-to-associate'] = targetToAssociate;
    }

    /**
     * Constructs a <code>CreateUSC</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateUSC} obj Optional instance to populate.
     * @return {module:model/CreateUSC} The populated <code>CreateUSC</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateUSC();

            if (data.hasOwnProperty('azure-kv-name')) {
                obj['azure-kv-name'] = ApiClient.convertToType(data['azure-kv-name'], 'String');
            }
            if (data.hasOwnProperty('delete_protection')) {
                obj['delete_protection'] = ApiClient.convertToType(data['delete_protection'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('json')) {
                obj['json'] = ApiClient.convertToType(data['json'], 'Boolean');
            }
            if (data.hasOwnProperty('k8s-namespace')) {
                obj['k8s-namespace'] = ApiClient.convertToType(data['k8s-namespace'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], ['String']);
            }
            if (data.hasOwnProperty('target-to-associate')) {
                obj['target-to-associate'] = ApiClient.convertToType(data['target-to-associate'], 'String');
            }
            if (data.hasOwnProperty('token')) {
                obj['token'] = ApiClient.convertToType(data['token'], 'String');
            }
            if (data.hasOwnProperty('uid-token')) {
                obj['uid-token'] = ApiClient.convertToType(data['uid-token'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateUSC</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateUSC</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateUSC.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['azure-kv-name'] && !(typeof data['azure-kv-name'] === 'string' || data['azure-kv-name'] instanceof String)) {
            throw new Error("Expected the field `azure-kv-name` to be a primitive type in the JSON string but got " + data['azure-kv-name']);
        }
        // ensure the json data is a string
        if (data['delete_protection'] && !(typeof data['delete_protection'] === 'string' || data['delete_protection'] instanceof String)) {
            throw new Error("Expected the field `delete_protection` to be a primitive type in the JSON string but got " + data['delete_protection']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['k8s-namespace'] && !(typeof data['k8s-namespace'] === 'string' || data['k8s-namespace'] instanceof String)) {
            throw new Error("Expected the field `k8s-namespace` to be a primitive type in the JSON string but got " + data['k8s-namespace']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['tags'])) {
            throw new Error("Expected the field `tags` to be an array in the JSON data but got " + data['tags']);
        }
        // ensure the json data is a string
        if (data['target-to-associate'] && !(typeof data['target-to-associate'] === 'string' || data['target-to-associate'] instanceof String)) {
            throw new Error("Expected the field `target-to-associate` to be a primitive type in the JSON string but got " + data['target-to-associate']);
        }
        // ensure the json data is a string
        if (data['token'] && !(typeof data['token'] === 'string' || data['token'] instanceof String)) {
            throw new Error("Expected the field `token` to be a primitive type in the JSON string but got " + data['token']);
        }
        // ensure the json data is a string
        if (data['uid-token'] && !(typeof data['uid-token'] === 'string' || data['uid-token'] instanceof String)) {
            throw new Error("Expected the field `uid-token` to be a primitive type in the JSON string but got " + data['uid-token']);
        }

        return true;
    }


}

CreateUSC.RequiredProperties = ["name", "target-to-associate"];

/**
 * Azure Key Vault name (Relevant only for Azure targets)
 * @member {String} azure-kv-name
 */
CreateUSC.prototype['azure-kv-name'] = undefined;

/**
 * Protection from accidental deletion of this object [true/false]
 * @member {String} delete_protection
 */
CreateUSC.prototype['delete_protection'] = undefined;

/**
 * Description of the Universal Secrets Connector
 * @member {String} description
 */
CreateUSC.prototype['description'] = undefined;

/**
 * Set output format to JSON
 * @member {Boolean} json
 * @default false
 */
CreateUSC.prototype['json'] = false;

/**
 * K8s namespace (Relevant to Kubernetes targets)
 * @member {String} k8s-namespace
 */
CreateUSC.prototype['k8s-namespace'] = undefined;

/**
 * Universal Secrets Connector name
 * @member {String} name
 */
CreateUSC.prototype['name'] = undefined;

/**
 * List of the tags attached to this Universal Secrets Connector
 * @member {Array.<String>} tags
 */
CreateUSC.prototype['tags'] = undefined;

/**
 * Target Universal Secrets Connector to connect
 * @member {String} target-to-associate
 */
CreateUSC.prototype['target-to-associate'] = undefined;

/**
 * Authentication token (see `/auth` and `/configure`)
 * @member {String} token
 */
CreateUSC.prototype['token'] = undefined;

/**
 * The universal identity token, Required only for universal_identity authentication
 * @member {String} uid-token
 */
CreateUSC.prototype['uid-token'] = undefined;






export default CreateUSC;

