/**
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 3.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateRole model module.
 * @module model/CreateRole
 * @version 5.0.12
 */
class CreateRole {
    /**
     * Constructs a new <code>CreateRole</code>.
     * @alias module:model/CreateRole
     * @param name {String} Role name
     */
    constructor(name) { 
        
        CreateRole.initialize(this, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name) { 
        obj['json'] = false;
        obj['name'] = name;
    }

    /**
     * Constructs a <code>CreateRole</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateRole} obj Optional instance to populate.
     * @return {module:model/CreateRole} The populated <code>CreateRole</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateRole();

            if (data.hasOwnProperty('analytics-access')) {
                obj['analytics-access'] = ApiClient.convertToType(data['analytics-access'], 'String');
            }
            if (data.hasOwnProperty('audit-access')) {
                obj['audit-access'] = ApiClient.convertToType(data['audit-access'], 'String');
            }
            if (data.hasOwnProperty('comment')) {
                obj['comment'] = ApiClient.convertToType(data['comment'], 'String');
            }
            if (data.hasOwnProperty('delete_protection')) {
                obj['delete_protection'] = ApiClient.convertToType(data['delete_protection'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('event-center-access')) {
                obj['event-center-access'] = ApiClient.convertToType(data['event-center-access'], 'String');
            }
            if (data.hasOwnProperty('event-forwarders-access')) {
                obj['event-forwarders-access'] = ApiClient.convertToType(data['event-forwarders-access'], 'String');
            }
            if (data.hasOwnProperty('gw-analytics-access')) {
                obj['gw-analytics-access'] = ApiClient.convertToType(data['gw-analytics-access'], 'String');
            }
            if (data.hasOwnProperty('json')) {
                obj['json'] = ApiClient.convertToType(data['json'], 'Boolean');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('reverse-rbac-access')) {
                obj['reverse-rbac-access'] = ApiClient.convertToType(data['reverse-rbac-access'], 'String');
            }
            if (data.hasOwnProperty('sra-reports-access')) {
                obj['sra-reports-access'] = ApiClient.convertToType(data['sra-reports-access'], 'String');
            }
            if (data.hasOwnProperty('token')) {
                obj['token'] = ApiClient.convertToType(data['token'], 'String');
            }
            if (data.hasOwnProperty('uid-token')) {
                obj['uid-token'] = ApiClient.convertToType(data['uid-token'], 'String');
            }
            if (data.hasOwnProperty('usage-reports-access')) {
                obj['usage-reports-access'] = ApiClient.convertToType(data['usage-reports-access'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateRole</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateRole</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateRole.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['analytics-access'] && !(typeof data['analytics-access'] === 'string' || data['analytics-access'] instanceof String)) {
            throw new Error("Expected the field `analytics-access` to be a primitive type in the JSON string but got " + data['analytics-access']);
        }
        // ensure the json data is a string
        if (data['audit-access'] && !(typeof data['audit-access'] === 'string' || data['audit-access'] instanceof String)) {
            throw new Error("Expected the field `audit-access` to be a primitive type in the JSON string but got " + data['audit-access']);
        }
        // ensure the json data is a string
        if (data['comment'] && !(typeof data['comment'] === 'string' || data['comment'] instanceof String)) {
            throw new Error("Expected the field `comment` to be a primitive type in the JSON string but got " + data['comment']);
        }
        // ensure the json data is a string
        if (data['delete_protection'] && !(typeof data['delete_protection'] === 'string' || data['delete_protection'] instanceof String)) {
            throw new Error("Expected the field `delete_protection` to be a primitive type in the JSON string but got " + data['delete_protection']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['event-center-access'] && !(typeof data['event-center-access'] === 'string' || data['event-center-access'] instanceof String)) {
            throw new Error("Expected the field `event-center-access` to be a primitive type in the JSON string but got " + data['event-center-access']);
        }
        // ensure the json data is a string
        if (data['event-forwarders-access'] && !(typeof data['event-forwarders-access'] === 'string' || data['event-forwarders-access'] instanceof String)) {
            throw new Error("Expected the field `event-forwarders-access` to be a primitive type in the JSON string but got " + data['event-forwarders-access']);
        }
        // ensure the json data is a string
        if (data['gw-analytics-access'] && !(typeof data['gw-analytics-access'] === 'string' || data['gw-analytics-access'] instanceof String)) {
            throw new Error("Expected the field `gw-analytics-access` to be a primitive type in the JSON string but got " + data['gw-analytics-access']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['reverse-rbac-access'] && !(typeof data['reverse-rbac-access'] === 'string' || data['reverse-rbac-access'] instanceof String)) {
            throw new Error("Expected the field `reverse-rbac-access` to be a primitive type in the JSON string but got " + data['reverse-rbac-access']);
        }
        // ensure the json data is a string
        if (data['sra-reports-access'] && !(typeof data['sra-reports-access'] === 'string' || data['sra-reports-access'] instanceof String)) {
            throw new Error("Expected the field `sra-reports-access` to be a primitive type in the JSON string but got " + data['sra-reports-access']);
        }
        // ensure the json data is a string
        if (data['token'] && !(typeof data['token'] === 'string' || data['token'] instanceof String)) {
            throw new Error("Expected the field `token` to be a primitive type in the JSON string but got " + data['token']);
        }
        // ensure the json data is a string
        if (data['uid-token'] && !(typeof data['uid-token'] === 'string' || data['uid-token'] instanceof String)) {
            throw new Error("Expected the field `uid-token` to be a primitive type in the JSON string but got " + data['uid-token']);
        }
        // ensure the json data is a string
        if (data['usage-reports-access'] && !(typeof data['usage-reports-access'] === 'string' || data['usage-reports-access'] instanceof String)) {
            throw new Error("Expected the field `usage-reports-access` to be a primitive type in the JSON string but got " + data['usage-reports-access']);
        }

        return true;
    }


}

CreateRole.RequiredProperties = ["name"];

/**
 * Allow this role to view analytics. Currently only 'none', 'own', 'all' values are supported, allowing associated auth methods to view reports produced by the same auth methods.
 * @member {String} analytics-access
 */
CreateRole.prototype['analytics-access'] = undefined;

/**
 * Allow this role to view audit logs. Currently only 'none', 'own' and 'all' values are supported, allowing associated auth methods to view audit logs produced by the same auth methods.
 * @member {String} audit-access
 */
CreateRole.prototype['audit-access'] = undefined;

/**
 * Deprecated - use description
 * @member {String} comment
 */
CreateRole.prototype['comment'] = undefined;

/**
 * Protection from accidental deletion of this object [true/false]
 * @member {String} delete_protection
 */
CreateRole.prototype['delete_protection'] = undefined;

/**
 * Description of the object
 * @member {String} description
 */
CreateRole.prototype['description'] = undefined;

/**
 * Allow this role to view Event Center. Currently only 'none', 'own' and 'all' values are supported
 * @member {String} event-center-access
 */
CreateRole.prototype['event-center-access'] = undefined;

/**
 * Allow this role to manage Event Forwarders. Currently only 'none' and 'all' values are supported.
 * @member {String} event-forwarders-access
 */
CreateRole.prototype['event-forwarders-access'] = undefined;

/**
 * Allow this role to view gw analytics. Currently only 'none', 'own', 'all' values are supported, allowing associated auth methods to view reports produced by the same auth methods.
 * @member {String} gw-analytics-access
 */
CreateRole.prototype['gw-analytics-access'] = undefined;

/**
 * Set output format to JSON
 * @member {Boolean} json
 * @default false
 */
CreateRole.prototype['json'] = false;

/**
 * Role name
 * @member {String} name
 */
CreateRole.prototype['name'] = undefined;

/**
 * Allow this role to view Reverse RBAC. Supported values: 'own', 'all'.
 * @member {String} reverse-rbac-access
 */
CreateRole.prototype['reverse-rbac-access'] = undefined;

/**
 * Allow this role to view SRA Clusters. Currently only 'none', 'own', 'all' values are supported.
 * @member {String} sra-reports-access
 */
CreateRole.prototype['sra-reports-access'] = undefined;

/**
 * Authentication token (see `/auth` and `/configure`)
 * @member {String} token
 */
CreateRole.prototype['token'] = undefined;

/**
 * The universal identity token, Required only for universal_identity authentication
 * @member {String} uid-token
 */
CreateRole.prototype['uid-token'] = undefined;

/**
 * Allow this role to view Usage Report. Currently only 'none' and 'all' values are supported.
 * @member {String} usage-reports-access
 */
CreateRole.prototype['usage-reports-access'] = undefined;






export default CreateRole;

