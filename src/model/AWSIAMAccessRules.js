/**
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 3.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AWSIAMAccessRules model module.
 * @module model/AWSIAMAccessRules
 * @version 5.0.8
 */
class AWSIAMAccessRules {
    /**
     * Constructs a new <code>AWSIAMAccessRules</code>.
     * @alias module:model/AWSIAMAccessRules
     */
    constructor() { 
        
        AWSIAMAccessRules.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AWSIAMAccessRules</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AWSIAMAccessRules} obj Optional instance to populate.
     * @return {module:model/AWSIAMAccessRules} The populated <code>AWSIAMAccessRules</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AWSIAMAccessRules();

            if (data.hasOwnProperty('account_id')) {
                obj['account_id'] = ApiClient.convertToType(data['account_id'], ['String']);
            }
            if (data.hasOwnProperty('arn')) {
                obj['arn'] = ApiClient.convertToType(data['arn'], ['String']);
            }
            if (data.hasOwnProperty('resource_id')) {
                obj['resource_id'] = ApiClient.convertToType(data['resource_id'], ['String']);
            }
            if (data.hasOwnProperty('role_id')) {
                obj['role_id'] = ApiClient.convertToType(data['role_id'], ['String']);
            }
            if (data.hasOwnProperty('role_name')) {
                obj['role_name'] = ApiClient.convertToType(data['role_name'], ['String']);
            }
            if (data.hasOwnProperty('sts_endpoint')) {
                obj['sts_endpoint'] = ApiClient.convertToType(data['sts_endpoint'], 'String');
            }
            if (data.hasOwnProperty('unique_identifier')) {
                obj['unique_identifier'] = ApiClient.convertToType(data['unique_identifier'], 'String');
            }
            if (data.hasOwnProperty('user_id')) {
                obj['user_id'] = ApiClient.convertToType(data['user_id'], ['String']);
            }
            if (data.hasOwnProperty('user_name')) {
                obj['user_name'] = ApiClient.convertToType(data['user_name'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AWSIAMAccessRules</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AWSIAMAccessRules</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['account_id'])) {
            throw new Error("Expected the field `account_id` to be an array in the JSON data but got " + data['account_id']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['arn'])) {
            throw new Error("Expected the field `arn` to be an array in the JSON data but got " + data['arn']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['resource_id'])) {
            throw new Error("Expected the field `resource_id` to be an array in the JSON data but got " + data['resource_id']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['role_id'])) {
            throw new Error("Expected the field `role_id` to be an array in the JSON data but got " + data['role_id']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['role_name'])) {
            throw new Error("Expected the field `role_name` to be an array in the JSON data but got " + data['role_name']);
        }
        // ensure the json data is a string
        if (data['sts_endpoint'] && !(typeof data['sts_endpoint'] === 'string' || data['sts_endpoint'] instanceof String)) {
            throw new Error("Expected the field `sts_endpoint` to be a primitive type in the JSON string but got " + data['sts_endpoint']);
        }
        // ensure the json data is a string
        if (data['unique_identifier'] && !(typeof data['unique_identifier'] === 'string' || data['unique_identifier'] instanceof String)) {
            throw new Error("Expected the field `unique_identifier` to be a primitive type in the JSON string but got " + data['unique_identifier']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['user_id'])) {
            throw new Error("Expected the field `user_id` to be an array in the JSON data but got " + data['user_id']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['user_name'])) {
            throw new Error("Expected the field `user_name` to be an array in the JSON data but got " + data['user_name']);
        }

        return true;
    }


}



/**
 * The list of account ids that the login is restricted to.
 * @member {Array.<String>} account_id
 */
AWSIAMAccessRules.prototype['account_id'] = undefined;

/**
 * The list of ARNs that the login is restricted to.
 * @member {Array.<String>} arn
 */
AWSIAMAccessRules.prototype['arn'] = undefined;

/**
 * The list of resource ids that the login is restricted to.
 * @member {Array.<String>} resource_id
 */
AWSIAMAccessRules.prototype['resource_id'] = undefined;

/**
 * The list of role ids that the login is restricted to.
 * @member {Array.<String>} role_id
 */
AWSIAMAccessRules.prototype['role_id'] = undefined;

/**
 * The list of role names that the login is restricted to.
 * @member {Array.<String>} role_name
 */
AWSIAMAccessRules.prototype['role_name'] = undefined;

/**
 * The sts URL.
 * @member {String} sts_endpoint
 */
AWSIAMAccessRules.prototype['sts_endpoint'] = undefined;

/**
 * A unique identifier to distinguish different users
 * @member {String} unique_identifier
 */
AWSIAMAccessRules.prototype['unique_identifier'] = undefined;

/**
 * The list of user ids that the login is restricted to.
 * @member {Array.<String>} user_id
 */
AWSIAMAccessRules.prototype['user_id'] = undefined;

/**
 * The list of user names that the login is restricted to.
 * @member {Array.<String>} user_name
 */
AWSIAMAccessRules.prototype['user_name'] = undefined;






export default AWSIAMAccessRules;

