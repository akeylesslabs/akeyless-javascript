/**
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 3.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OAuth2CustomClaim from './OAuth2CustomClaim';

/**
 * The OAuth2AccessRules model module.
 * @module model/OAuth2AccessRules
 * @version 5.0.8
 */
class OAuth2AccessRules {
    /**
     * Constructs a new <code>OAuth2AccessRules</code>.
     * OAuth2AccessRules contains access rules specific to OAuth2 authentication method.
     * @alias module:model/OAuth2AccessRules
     */
    constructor() { 
        
        OAuth2AccessRules.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OAuth2AccessRules</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OAuth2AccessRules} obj Optional instance to populate.
     * @return {module:model/OAuth2AccessRules} The populated <code>OAuth2AccessRules</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OAuth2AccessRules();

            if (data.hasOwnProperty('audience')) {
                obj['audience'] = ApiClient.convertToType(data['audience'], 'String');
            }
            if (data.hasOwnProperty('authorized_gw_cluster_name')) {
                obj['authorized_gw_cluster_name'] = ApiClient.convertToType(data['authorized_gw_cluster_name'], 'String');
            }
            if (data.hasOwnProperty('bound_claims')) {
                obj['bound_claims'] = ApiClient.convertToType(data['bound_claims'], [OAuth2CustomClaim]);
            }
            if (data.hasOwnProperty('bound_clients_id')) {
                obj['bound_clients_id'] = ApiClient.convertToType(data['bound_clients_id'], ['String']);
            }
            if (data.hasOwnProperty('certificate')) {
                obj['certificate'] = ApiClient.convertToType(data['certificate'], 'String');
            }
            if (data.hasOwnProperty('issuer')) {
                obj['issuer'] = ApiClient.convertToType(data['issuer'], 'String');
            }
            if (data.hasOwnProperty('jwks_json_data')) {
                obj['jwks_json_data'] = ApiClient.convertToType(data['jwks_json_data'], 'String');
            }
            if (data.hasOwnProperty('jwks_uri')) {
                obj['jwks_uri'] = ApiClient.convertToType(data['jwks_uri'], 'String');
            }
            if (data.hasOwnProperty('unique_identifier')) {
                obj['unique_identifier'] = ApiClient.convertToType(data['unique_identifier'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OAuth2AccessRules</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OAuth2AccessRules</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['audience'] && !(typeof data['audience'] === 'string' || data['audience'] instanceof String)) {
            throw new Error("Expected the field `audience` to be a primitive type in the JSON string but got " + data['audience']);
        }
        // ensure the json data is a string
        if (data['authorized_gw_cluster_name'] && !(typeof data['authorized_gw_cluster_name'] === 'string' || data['authorized_gw_cluster_name'] instanceof String)) {
            throw new Error("Expected the field `authorized_gw_cluster_name` to be a primitive type in the JSON string but got " + data['authorized_gw_cluster_name']);
        }
        if (data['bound_claims']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['bound_claims'])) {
                throw new Error("Expected the field `bound_claims` to be an array in the JSON data but got " + data['bound_claims']);
            }
            // validate the optional field `bound_claims` (array)
            for (const item of data['bound_claims']) {
                OAuth2CustomClaim.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['bound_clients_id'])) {
            throw new Error("Expected the field `bound_clients_id` to be an array in the JSON data but got " + data['bound_clients_id']);
        }
        // ensure the json data is a string
        if (data['certificate'] && !(typeof data['certificate'] === 'string' || data['certificate'] instanceof String)) {
            throw new Error("Expected the field `certificate` to be a primitive type in the JSON string but got " + data['certificate']);
        }
        // ensure the json data is a string
        if (data['issuer'] && !(typeof data['issuer'] === 'string' || data['issuer'] instanceof String)) {
            throw new Error("Expected the field `issuer` to be a primitive type in the JSON string but got " + data['issuer']);
        }
        // ensure the json data is a string
        if (data['jwks_json_data'] && !(typeof data['jwks_json_data'] === 'string' || data['jwks_json_data'] instanceof String)) {
            throw new Error("Expected the field `jwks_json_data` to be a primitive type in the JSON string but got " + data['jwks_json_data']);
        }
        // ensure the json data is a string
        if (data['jwks_uri'] && !(typeof data['jwks_uri'] === 'string' || data['jwks_uri'] instanceof String)) {
            throw new Error("Expected the field `jwks_uri` to be a primitive type in the JSON string but got " + data['jwks_uri']);
        }
        // ensure the json data is a string
        if (data['unique_identifier'] && !(typeof data['unique_identifier'] === 'string' || data['unique_identifier'] instanceof String)) {
            throw new Error("Expected the field `unique_identifier` to be a primitive type in the JSON string but got " + data['unique_identifier']);
        }

        return true;
    }


}



/**
 * The audience in the JWT.
 * @member {String} audience
 */
OAuth2AccessRules.prototype['audience'] = undefined;

/**
 * The gateway cluster name that is authorized to access JWKeySetURL
 * @member {String} authorized_gw_cluster_name
 */
OAuth2AccessRules.prototype['authorized_gw_cluster_name'] = undefined;

/**
 * The claims that login is restricted to.
 * @member {Array.<module:model/OAuth2CustomClaim>} bound_claims
 */
OAuth2AccessRules.prototype['bound_claims'] = undefined;

/**
 * The clients ids that login is restricted to.
 * @member {Array.<String>} bound_clients_id
 */
OAuth2AccessRules.prototype['bound_clients_id'] = undefined;

/**
 * Certificate to use when calling jwks_uri from the gateway. in PEM format
 * @member {String} certificate
 */
OAuth2AccessRules.prototype['certificate'] = undefined;

/**
 * Issuer URL
 * @member {String} issuer
 */
OAuth2AccessRules.prototype['issuer'] = undefined;

/**
 * The JSON Web Key Set (JWKS) that containing the public keys that should be used to verify any JSON Web Token (JWT) issued by the authorization server. base64 encoded string
 * @member {String} jwks_json_data
 */
OAuth2AccessRules.prototype['jwks_json_data'] = undefined;

/**
 * The URL to the JSON Web Key Set (JWKS) that containing the public keys that should be used to verify any JSON Web Token (JWT) issued by the authorization server.
 * @member {String} jwks_uri
 */
OAuth2AccessRules.prototype['jwks_uri'] = undefined;

/**
 * A unique identifier to distinguish different users
 * @member {String} unique_identifier
 */
OAuth2AccessRules.prototype['unique_identifier'] = undefined;






export default OAuth2AccessRules;

