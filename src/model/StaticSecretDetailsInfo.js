/**
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 3.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PasswordSecurityInfo from './PasswordSecurityInfo';

/**
 * The StaticSecretDetailsInfo model module.
 * @module model/StaticSecretDetailsInfo
 * @version 5.0.12
 */
class StaticSecretDetailsInfo {
    /**
     * Constructs a new <code>StaticSecretDetailsInfo</code>.
     * @alias module:model/StaticSecretDetailsInfo
     */
    constructor() { 
        
        StaticSecretDetailsInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>StaticSecretDetailsInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StaticSecretDetailsInfo} obj Optional instance to populate.
     * @return {module:model/StaticSecretDetailsInfo} The populated <code>StaticSecretDetailsInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StaticSecretDetailsInfo();

            if (data.hasOwnProperty('format')) {
                obj['format'] = ApiClient.convertToType(data['format'], 'String');
            }
            if (data.hasOwnProperty('max_versions')) {
                obj['max_versions'] = ApiClient.convertToType(data['max_versions'], 'Number');
            }
            if (data.hasOwnProperty('notify_on_change_event')) {
                obj['notify_on_change_event'] = ApiClient.convertToType(data['notify_on_change_event'], 'Boolean');
            }
            if (data.hasOwnProperty('password_security_info')) {
                obj['password_security_info'] = PasswordSecurityInfo.constructFromObject(data['password_security_info']);
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
            if (data.hasOwnProperty('website')) {
                obj['website'] = ApiClient.convertToType(data['website'], 'String');
            }
            if (data.hasOwnProperty('websites')) {
                obj['websites'] = ApiClient.convertToType(data['websites'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StaticSecretDetailsInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StaticSecretDetailsInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['format'] && !(typeof data['format'] === 'string' || data['format'] instanceof String)) {
            throw new Error("Expected the field `format` to be a primitive type in the JSON string but got " + data['format']);
        }
        // validate the optional field `password_security_info`
        if (data['password_security_info']) { // data not null
          PasswordSecurityInfo.validateJSON(data['password_security_info']);
        }
        // ensure the json data is a string
        if (data['username'] && !(typeof data['username'] === 'string' || data['username'] instanceof String)) {
            throw new Error("Expected the field `username` to be a primitive type in the JSON string but got " + data['username']);
        }
        // ensure the json data is a string
        if (data['website'] && !(typeof data['website'] === 'string' || data['website'] instanceof String)) {
            throw new Error("Expected the field `website` to be a primitive type in the JSON string but got " + data['website']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['websites'])) {
            throw new Error("Expected the field `websites` to be an array in the JSON data but got " + data['websites']);
        }

        return true;
    }


}



/**
 * StaticSecretFormat defines the format of static secret (e.g. Text)
 * @member {String} format
 */
StaticSecretDetailsInfo.prototype['format'] = undefined;

/**
 * @member {Number} max_versions
 */
StaticSecretDetailsInfo.prototype['max_versions'] = undefined;

/**
 * @member {Boolean} notify_on_change_event
 */
StaticSecretDetailsInfo.prototype['notify_on_change_event'] = undefined;

/**
 * @member {module:model/PasswordSecurityInfo} password_security_info
 */
StaticSecretDetailsInfo.prototype['password_security_info'] = undefined;

/**
 * @member {String} username
 */
StaticSecretDetailsInfo.prototype['username'] = undefined;

/**
 * deprecated
 * @member {String} website
 */
StaticSecretDetailsInfo.prototype['website'] = undefined;

/**
 * @member {Array.<String>} websites
 */
StaticSecretDetailsInfo.prototype['websites'] = undefined;






export default StaticSecretDetailsInfo;

