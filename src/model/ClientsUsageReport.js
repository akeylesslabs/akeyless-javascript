/**
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 3.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ClientUsageInfo from './ClientUsageInfo';

/**
 * The ClientsUsageReport model module.
 * @module model/ClientsUsageReport
 * @version 5.0.12
 */
class ClientsUsageReport {
    /**
     * Constructs a new <code>ClientsUsageReport</code>.
     * @alias module:model/ClientsUsageReport
     */
    constructor() { 
        
        ClientsUsageReport.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ClientsUsageReport</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ClientsUsageReport} obj Optional instance to populate.
     * @return {module:model/ClientsUsageReport} The populated <code>ClientsUsageReport</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClientsUsageReport();

            if (data.hasOwnProperty('account_id')) {
                obj['account_id'] = ApiClient.convertToType(data['account_id'], 'String');
            }
            if (data.hasOwnProperty('clients')) {
                obj['clients'] = ApiClient.convertToType(data['clients'], [ClientUsageInfo]);
            }
            if (data.hasOwnProperty('product')) {
                obj['product'] = ApiClient.convertToType(data['product'], 'String');
            }
            if (data.hasOwnProperty('time')) {
                obj['time'] = ApiClient.convertToType(data['time'], 'Date');
            }
            if (data.hasOwnProperty('total_clients')) {
                obj['total_clients'] = ApiClient.convertToType(data['total_clients'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ClientsUsageReport</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ClientsUsageReport</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['account_id'] && !(typeof data['account_id'] === 'string' || data['account_id'] instanceof String)) {
            throw new Error("Expected the field `account_id` to be a primitive type in the JSON string but got " + data['account_id']);
        }
        if (data['clients']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['clients'])) {
                throw new Error("Expected the field `clients` to be an array in the JSON data but got " + data['clients']);
            }
            // validate the optional field `clients` (array)
            for (const item of data['clients']) {
                ClientUsageInfo.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['product'] && !(typeof data['product'] === 'string' || data['product'] instanceof String)) {
            throw new Error("Expected the field `product` to be a primitive type in the JSON string but got " + data['product']);
        }

        return true;
    }


}



/**
 * @member {String} account_id
 */
ClientsUsageReport.prototype['account_id'] = undefined;

/**
 * @member {Array.<module:model/ClientUsageInfo>} clients
 */
ClientsUsageReport.prototype['clients'] = undefined;

/**
 * @member {String} product
 */
ClientsUsageReport.prototype['product'] = undefined;

/**
 * @member {Date} time
 */
ClientsUsageReport.prototype['time'] = undefined;

/**
 * @member {Number} total_clients
 */
ClientsUsageReport.prototype['total_clients'] = undefined;






export default ClientsUsageReport;

