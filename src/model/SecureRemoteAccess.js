/**
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 3.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ItemSraStatus from './ItemSraStatus';
import TargetNameWithHosts from './TargetNameWithHosts';

/**
 * The SecureRemoteAccess model module.
 * @module model/SecureRemoteAccess
 * @version 5.0.11
 */
class SecureRemoteAccess {
    /**
     * Constructs a new <code>SecureRemoteAccess</code>.
     * @alias module:model/SecureRemoteAccess
     */
    constructor() { 
        
        SecureRemoteAccess.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SecureRemoteAccess</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SecureRemoteAccess} obj Optional instance to populate.
     * @return {module:model/SecureRemoteAccess} The populated <code>SecureRemoteAccess</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SecureRemoteAccess();

            if (data.hasOwnProperty('account_id')) {
                obj['account_id'] = ApiClient.convertToType(data['account_id'], 'String');
            }
            if (data.hasOwnProperty('allow_port_forwarding')) {
                obj['allow_port_forwarding'] = ApiClient.convertToType(data['allow_port_forwarding'], 'Boolean');
            }
            if (data.hasOwnProperty('allow_providing_external_username')) {
                obj['allow_providing_external_username'] = ApiClient.convertToType(data['allow_providing_external_username'], 'Boolean');
            }
            if (data.hasOwnProperty('bastion_api')) {
                obj['bastion_api'] = ApiClient.convertToType(data['bastion_api'], 'String');
            }
            if (data.hasOwnProperty('bastion_issuer')) {
                obj['bastion_issuer'] = ApiClient.convertToType(data['bastion_issuer'], 'String');
            }
            if (data.hasOwnProperty('bastion_issuer_id')) {
                obj['bastion_issuer_id'] = ApiClient.convertToType(data['bastion_issuer_id'], 'Number');
            }
            if (data.hasOwnProperty('bastion_ssh')) {
                obj['bastion_ssh'] = ApiClient.convertToType(data['bastion_ssh'], 'String');
            }
            if (data.hasOwnProperty('block_concurrent_connections')) {
                obj['block_concurrent_connections'] = ApiClient.convertToType(data['block_concurrent_connections'], 'Boolean');
            }
            if (data.hasOwnProperty('block_concurrent_connections_level')) {
                obj['block_concurrent_connections_level'] = ApiClient.convertToType(data['block_concurrent_connections_level'], 'String');
            }
            if (data.hasOwnProperty('category')) {
                obj['category'] = ApiClient.convertToType(data['category'], 'String');
            }
            if (data.hasOwnProperty('connection_delay_seconds')) {
                obj['connection_delay_seconds'] = ApiClient.convertToType(data['connection_delay_seconds'], 'Number');
            }
            if (data.hasOwnProperty('dashboard_url')) {
                obj['dashboard_url'] = ApiClient.convertToType(data['dashboard_url'], 'String');
            }
            if (data.hasOwnProperty('db_name')) {
                obj['db_name'] = ApiClient.convertToType(data['db_name'], 'String');
            }
            if (data.hasOwnProperty('domain')) {
                obj['domain'] = ApiClient.convertToType(data['domain'], 'String');
            }
            if (data.hasOwnProperty('enable')) {
                obj['enable'] = ApiClient.convertToType(data['enable'], 'Boolean');
            }
            if (data.hasOwnProperty('endpoint')) {
                obj['endpoint'] = ApiClient.convertToType(data['endpoint'], 'String');
            }
            if (data.hasOwnProperty('enforce_hosts_restriction')) {
                obj['enforce_hosts_restriction'] = ApiClient.convertToType(data['enforce_hosts_restriction'], 'Boolean');
            }
            if (data.hasOwnProperty('gw_cluster_id')) {
                obj['gw_cluster_id'] = ApiClient.convertToType(data['gw_cluster_id'], 'Number');
            }
            if (data.hasOwnProperty('host')) {
                obj['host'] = ApiClient.convertToType(data['host'], ['String']);
            }
            if (data.hasOwnProperty('host_provider_type')) {
                obj['host_provider_type'] = ApiClient.convertToType(data['host_provider_type'], 'String');
            }
            if (data.hasOwnProperty('is_cli')) {
                obj['is_cli'] = ApiClient.convertToType(data['is_cli'], 'Boolean');
            }
            if (data.hasOwnProperty('is_desktop_app')) {
                obj['is_desktop_app'] = ApiClient.convertToType(data['is_desktop_app'], 'Boolean');
            }
            if (data.hasOwnProperty('is_web')) {
                obj['is_web'] = ApiClient.convertToType(data['is_web'], 'Boolean');
            }
            if (data.hasOwnProperty('isolated')) {
                obj['isolated'] = ApiClient.convertToType(data['isolated'], 'Boolean');
            }
            if (data.hasOwnProperty('native')) {
                obj['native'] = ApiClient.convertToType(data['native'], 'Boolean');
            }
            if (data.hasOwnProperty('rd_gateway_server')) {
                obj['rd_gateway_server'] = ApiClient.convertToType(data['rd_gateway_server'], 'String');
            }
            if (data.hasOwnProperty('rdp_user')) {
                obj['rdp_user'] = ApiClient.convertToType(data['rdp_user'], 'String');
            }
            if (data.hasOwnProperty('region')) {
                obj['region'] = ApiClient.convertToType(data['region'], 'String');
            }
            if (data.hasOwnProperty('rotate_after_disconnect')) {
                obj['rotate_after_disconnect'] = ApiClient.convertToType(data['rotate_after_disconnect'], 'Boolean');
            }
            if (data.hasOwnProperty('schema')) {
                obj['schema'] = ApiClient.convertToType(data['schema'], 'String');
            }
            if (data.hasOwnProperty('ssh_password')) {
                obj['ssh_password'] = ApiClient.convertToType(data['ssh_password'], 'Boolean');
            }
            if (data.hasOwnProperty('ssh_private_key')) {
                obj['ssh_private_key'] = ApiClient.convertToType(data['ssh_private_key'], 'Boolean');
            }
            if (data.hasOwnProperty('ssh_user')) {
                obj['ssh_user'] = ApiClient.convertToType(data['ssh_user'], 'String');
            }
            if (data.hasOwnProperty('status_info')) {
                obj['status_info'] = ItemSraStatus.constructFromObject(data['status_info']);
            }
            if (data.hasOwnProperty('target_hosts')) {
                obj['target_hosts'] = ApiClient.convertToType(data['target_hosts'], [TargetNameWithHosts]);
            }
            if (data.hasOwnProperty('targets')) {
                obj['targets'] = ApiClient.convertToType(data['targets'], ['String']);
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('use_internal_bastion')) {
                obj['use_internal_bastion'] = ApiClient.convertToType(data['use_internal_bastion'], 'Boolean');
            }
            if (data.hasOwnProperty('web_proxy')) {
                obj['web_proxy'] = ApiClient.convertToType(data['web_proxy'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SecureRemoteAccess</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SecureRemoteAccess</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['account_id'] && !(typeof data['account_id'] === 'string' || data['account_id'] instanceof String)) {
            throw new Error("Expected the field `account_id` to be a primitive type in the JSON string but got " + data['account_id']);
        }
        // ensure the json data is a string
        if (data['bastion_api'] && !(typeof data['bastion_api'] === 'string' || data['bastion_api'] instanceof String)) {
            throw new Error("Expected the field `bastion_api` to be a primitive type in the JSON string but got " + data['bastion_api']);
        }
        // ensure the json data is a string
        if (data['bastion_issuer'] && !(typeof data['bastion_issuer'] === 'string' || data['bastion_issuer'] instanceof String)) {
            throw new Error("Expected the field `bastion_issuer` to be a primitive type in the JSON string but got " + data['bastion_issuer']);
        }
        // ensure the json data is a string
        if (data['bastion_ssh'] && !(typeof data['bastion_ssh'] === 'string' || data['bastion_ssh'] instanceof String)) {
            throw new Error("Expected the field `bastion_ssh` to be a primitive type in the JSON string but got " + data['bastion_ssh']);
        }
        // ensure the json data is a string
        if (data['block_concurrent_connections_level'] && !(typeof data['block_concurrent_connections_level'] === 'string' || data['block_concurrent_connections_level'] instanceof String)) {
            throw new Error("Expected the field `block_concurrent_connections_level` to be a primitive type in the JSON string but got " + data['block_concurrent_connections_level']);
        }
        // ensure the json data is a string
        if (data['category'] && !(typeof data['category'] === 'string' || data['category'] instanceof String)) {
            throw new Error("Expected the field `category` to be a primitive type in the JSON string but got " + data['category']);
        }
        // ensure the json data is a string
        if (data['dashboard_url'] && !(typeof data['dashboard_url'] === 'string' || data['dashboard_url'] instanceof String)) {
            throw new Error("Expected the field `dashboard_url` to be a primitive type in the JSON string but got " + data['dashboard_url']);
        }
        // ensure the json data is a string
        if (data['db_name'] && !(typeof data['db_name'] === 'string' || data['db_name'] instanceof String)) {
            throw new Error("Expected the field `db_name` to be a primitive type in the JSON string but got " + data['db_name']);
        }
        // ensure the json data is a string
        if (data['domain'] && !(typeof data['domain'] === 'string' || data['domain'] instanceof String)) {
            throw new Error("Expected the field `domain` to be a primitive type in the JSON string but got " + data['domain']);
        }
        // ensure the json data is a string
        if (data['endpoint'] && !(typeof data['endpoint'] === 'string' || data['endpoint'] instanceof String)) {
            throw new Error("Expected the field `endpoint` to be a primitive type in the JSON string but got " + data['endpoint']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['host'])) {
            throw new Error("Expected the field `host` to be an array in the JSON data but got " + data['host']);
        }
        // ensure the json data is a string
        if (data['host_provider_type'] && !(typeof data['host_provider_type'] === 'string' || data['host_provider_type'] instanceof String)) {
            throw new Error("Expected the field `host_provider_type` to be a primitive type in the JSON string but got " + data['host_provider_type']);
        }
        // ensure the json data is a string
        if (data['rd_gateway_server'] && !(typeof data['rd_gateway_server'] === 'string' || data['rd_gateway_server'] instanceof String)) {
            throw new Error("Expected the field `rd_gateway_server` to be a primitive type in the JSON string but got " + data['rd_gateway_server']);
        }
        // ensure the json data is a string
        if (data['rdp_user'] && !(typeof data['rdp_user'] === 'string' || data['rdp_user'] instanceof String)) {
            throw new Error("Expected the field `rdp_user` to be a primitive type in the JSON string but got " + data['rdp_user']);
        }
        // ensure the json data is a string
        if (data['region'] && !(typeof data['region'] === 'string' || data['region'] instanceof String)) {
            throw new Error("Expected the field `region` to be a primitive type in the JSON string but got " + data['region']);
        }
        // ensure the json data is a string
        if (data['schema'] && !(typeof data['schema'] === 'string' || data['schema'] instanceof String)) {
            throw new Error("Expected the field `schema` to be a primitive type in the JSON string but got " + data['schema']);
        }
        // ensure the json data is a string
        if (data['ssh_user'] && !(typeof data['ssh_user'] === 'string' || data['ssh_user'] instanceof String)) {
            throw new Error("Expected the field `ssh_user` to be a primitive type in the JSON string but got " + data['ssh_user']);
        }
        // validate the optional field `status_info`
        if (data['status_info']) { // data not null
          ItemSraStatus.validateJSON(data['status_info']);
        }
        if (data['target_hosts']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['target_hosts'])) {
                throw new Error("Expected the field `target_hosts` to be an array in the JSON data but got " + data['target_hosts']);
            }
            // validate the optional field `target_hosts` (array)
            for (const item of data['target_hosts']) {
                TargetNameWithHosts.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['targets'])) {
            throw new Error("Expected the field `targets` to be an array in the JSON data but got " + data['targets']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * @member {String} account_id
 */
SecureRemoteAccess.prototype['account_id'] = undefined;

/**
 * @member {Boolean} allow_port_forwarding
 */
SecureRemoteAccess.prototype['allow_port_forwarding'] = undefined;

/**
 * @member {Boolean} allow_providing_external_username
 */
SecureRemoteAccess.prototype['allow_providing_external_username'] = undefined;

/**
 * @member {String} bastion_api
 */
SecureRemoteAccess.prototype['bastion_api'] = undefined;

/**
 * @member {String} bastion_issuer
 */
SecureRemoteAccess.prototype['bastion_issuer'] = undefined;

/**
 * @member {Number} bastion_issuer_id
 */
SecureRemoteAccess.prototype['bastion_issuer_id'] = undefined;

/**
 * @member {String} bastion_ssh
 */
SecureRemoteAccess.prototype['bastion_ssh'] = undefined;

/**
 * @member {Boolean} block_concurrent_connections
 */
SecureRemoteAccess.prototype['block_concurrent_connections'] = undefined;

/**
 * @member {String} block_concurrent_connections_level
 */
SecureRemoteAccess.prototype['block_concurrent_connections_level'] = undefined;

/**
 * @member {String} category
 */
SecureRemoteAccess.prototype['category'] = undefined;

/**
 * @member {Number} connection_delay_seconds
 */
SecureRemoteAccess.prototype['connection_delay_seconds'] = undefined;

/**
 * @member {String} dashboard_url
 */
SecureRemoteAccess.prototype['dashboard_url'] = undefined;

/**
 * @member {String} db_name
 */
SecureRemoteAccess.prototype['db_name'] = undefined;

/**
 * @member {String} domain
 */
SecureRemoteAccess.prototype['domain'] = undefined;

/**
 * @member {Boolean} enable
 */
SecureRemoteAccess.prototype['enable'] = undefined;

/**
 * @member {String} endpoint
 */
SecureRemoteAccess.prototype['endpoint'] = undefined;

/**
 * @member {Boolean} enforce_hosts_restriction
 */
SecureRemoteAccess.prototype['enforce_hosts_restriction'] = undefined;

/**
 * @member {Number} gw_cluster_id
 */
SecureRemoteAccess.prototype['gw_cluster_id'] = undefined;

/**
 * @member {Array.<String>} host
 */
SecureRemoteAccess.prototype['host'] = undefined;

/**
 * @member {String} host_provider_type
 */
SecureRemoteAccess.prototype['host_provider_type'] = undefined;

/**
 * @member {Boolean} is_cli
 */
SecureRemoteAccess.prototype['is_cli'] = undefined;

/**
 * @member {Boolean} is_desktop_app
 */
SecureRemoteAccess.prototype['is_desktop_app'] = undefined;

/**
 * @member {Boolean} is_web
 */
SecureRemoteAccess.prototype['is_web'] = undefined;

/**
 * @member {Boolean} isolated
 */
SecureRemoteAccess.prototype['isolated'] = undefined;

/**
 * @member {Boolean} native
 */
SecureRemoteAccess.prototype['native'] = undefined;

/**
 * @member {String} rd_gateway_server
 */
SecureRemoteAccess.prototype['rd_gateway_server'] = undefined;

/**
 * @member {String} rdp_user
 */
SecureRemoteAccess.prototype['rdp_user'] = undefined;

/**
 * @member {String} region
 */
SecureRemoteAccess.prototype['region'] = undefined;

/**
 * @member {Boolean} rotate_after_disconnect
 */
SecureRemoteAccess.prototype['rotate_after_disconnect'] = undefined;

/**
 * @member {String} schema
 */
SecureRemoteAccess.prototype['schema'] = undefined;

/**
 * @member {Boolean} ssh_password
 */
SecureRemoteAccess.prototype['ssh_password'] = undefined;

/**
 * @member {Boolean} ssh_private_key
 */
SecureRemoteAccess.prototype['ssh_private_key'] = undefined;

/**
 * @member {String} ssh_user
 */
SecureRemoteAccess.prototype['ssh_user'] = undefined;

/**
 * @member {module:model/ItemSraStatus} status_info
 */
SecureRemoteAccess.prototype['status_info'] = undefined;

/**
 * @member {Array.<module:model/TargetNameWithHosts>} target_hosts
 */
SecureRemoteAccess.prototype['target_hosts'] = undefined;

/**
 * @member {Array.<String>} targets
 */
SecureRemoteAccess.prototype['targets'] = undefined;

/**
 * @member {String} url
 */
SecureRemoteAccess.prototype['url'] = undefined;

/**
 * @member {Boolean} use_internal_bastion
 */
SecureRemoteAccess.prototype['use_internal_bastion'] = undefined;

/**
 * @member {Boolean} web_proxy
 */
SecureRemoteAccess.prototype['web_proxy'] = undefined;






export default SecureRemoteAccess;

