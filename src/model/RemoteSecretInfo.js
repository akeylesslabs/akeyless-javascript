/**
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 3.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RemoteSecretInfo model module.
 * @module model/RemoteSecretInfo
 * @version 5.0.0
 */
class RemoteSecretInfo {
    /**
     * Constructs a new <code>RemoteSecretInfo</code>.
     * @alias module:model/RemoteSecretInfo
     */
    constructor() { 
        
        RemoteSecretInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RemoteSecretInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RemoteSecretInfo} obj Optional instance to populate.
     * @return {module:model/RemoteSecretInfo} The populated <code>RemoteSecretInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RemoteSecretInfo();

            if (data.hasOwnProperty('last_error')) {
                obj['last_error'] = ApiClient.convertToType(data['last_error'], 'String');
            }
            if (data.hasOwnProperty('namespace')) {
                obj['namespace'] = ApiClient.convertToType(data['namespace'], 'String');
            }
            if (data.hasOwnProperty('secret_id')) {
                obj['secret_id'] = ApiClient.convertToType(data['secret_id'], 'String');
            }
            if (data.hasOwnProperty('secret_name')) {
                obj['secret_name'] = ApiClient.convertToType(data['secret_name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RemoteSecretInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RemoteSecretInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['last_error'] && !(typeof data['last_error'] === 'string' || data['last_error'] instanceof String)) {
            throw new Error("Expected the field `last_error` to be a primitive type in the JSON string but got " + data['last_error']);
        }
        // ensure the json data is a string
        if (data['namespace'] && !(typeof data['namespace'] === 'string' || data['namespace'] instanceof String)) {
            throw new Error("Expected the field `namespace` to be a primitive type in the JSON string but got " + data['namespace']);
        }
        // ensure the json data is a string
        if (data['secret_id'] && !(typeof data['secret_id'] === 'string' || data['secret_id'] instanceof String)) {
            throw new Error("Expected the field `secret_id` to be a primitive type in the JSON string but got " + data['secret_id']);
        }
        // ensure the json data is a string
        if (data['secret_name'] && !(typeof data['secret_name'] === 'string' || data['secret_name'] instanceof String)) {
            throw new Error("Expected the field `secret_name` to be a primitive type in the JSON string but got " + data['secret_name']);
        }

        return true;
    }


}



/**
 * @member {String} last_error
 */
RemoteSecretInfo.prototype['last_error'] = undefined;

/**
 * @member {String} namespace
 */
RemoteSecretInfo.prototype['namespace'] = undefined;

/**
 * @member {String} secret_id
 */
RemoteSecretInfo.prototype['secret_id'] = undefined;

/**
 * @member {String} secret_name
 */
RemoteSecretInfo.prototype['secret_name'] = undefined;






export default RemoteSecretInfo;

