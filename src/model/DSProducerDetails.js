/**
 * Akeyless API
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ItemTargetAssociation from './ItemTargetAssociation';
import SecureRemoteAccess from './SecureRemoteAccess';

/**
 * The DSProducerDetails model module.
 * @module model/DSProducerDetails
 * @version 4.2.5
 */
class DSProducerDetails {
    /**
     * Constructs a new <code>DSProducerDetails</code>.
     * @alias module:model/DSProducerDetails
     */
    constructor() { 
        
        DSProducerDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DSProducerDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DSProducerDetails} obj Optional instance to populate.
     * @return {module:model/DSProducerDetails} The populated <code>DSProducerDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DSProducerDetails();

            if (data.hasOwnProperty('access_token_manager_id')) {
                obj['access_token_manager_id'] = ApiClient.convertToType(data['access_token_manager_id'], 'String');
            }
            if (data.hasOwnProperty('acl_rules')) {
                obj['acl_rules'] = ApiClient.convertToType(data['acl_rules'], ['String']);
            }
            if (data.hasOwnProperty('active')) {
                obj['active'] = ApiClient.convertToType(data['active'], 'Boolean');
            }
            if (data.hasOwnProperty('admin_name')) {
                obj['admin_name'] = ApiClient.convertToType(data['admin_name'], 'String');
            }
            if (data.hasOwnProperty('admin_pwd')) {
                obj['admin_pwd'] = ApiClient.convertToType(data['admin_pwd'], 'String');
            }
            if (data.hasOwnProperty('admin_rotation_interval_days')) {
                obj['admin_rotation_interval_days'] = ApiClient.convertToType(data['admin_rotation_interval_days'], 'Number');
            }
            if (data.hasOwnProperty('administrative_port')) {
                obj['administrative_port'] = ApiClient.convertToType(data['administrative_port'], 'String');
            }
            if (data.hasOwnProperty('artifactory_admin_apikey')) {
                obj['artifactory_admin_apikey'] = ApiClient.convertToType(data['artifactory_admin_apikey'], 'String');
            }
            if (data.hasOwnProperty('artifactory_admin_username')) {
                obj['artifactory_admin_username'] = ApiClient.convertToType(data['artifactory_admin_username'], 'String');
            }
            if (data.hasOwnProperty('artifactory_base_url')) {
                obj['artifactory_base_url'] = ApiClient.convertToType(data['artifactory_base_url'], 'String');
            }
            if (data.hasOwnProperty('artifactory_token_audience')) {
                obj['artifactory_token_audience'] = ApiClient.convertToType(data['artifactory_token_audience'], 'String');
            }
            if (data.hasOwnProperty('artifactory_token_scope')) {
                obj['artifactory_token_scope'] = ApiClient.convertToType(data['artifactory_token_scope'], 'String');
            }
            if (data.hasOwnProperty('authorization_port')) {
                obj['authorization_port'] = ApiClient.convertToType(data['authorization_port'], 'String');
            }
            if (data.hasOwnProperty('aws_access_key_id')) {
                obj['aws_access_key_id'] = ApiClient.convertToType(data['aws_access_key_id'], 'String');
            }
            if (data.hasOwnProperty('aws_access_mode')) {
                obj['aws_access_mode'] = ApiClient.convertToType(data['aws_access_mode'], 'String');
            }
            if (data.hasOwnProperty('aws_region')) {
                obj['aws_region'] = ApiClient.convertToType(data['aws_region'], 'String');
            }
            if (data.hasOwnProperty('aws_role_arns')) {
                obj['aws_role_arns'] = ApiClient.convertToType(data['aws_role_arns'], 'String');
            }
            if (data.hasOwnProperty('aws_secret_access_key')) {
                obj['aws_secret_access_key'] = ApiClient.convertToType(data['aws_secret_access_key'], 'String');
            }
            if (data.hasOwnProperty('aws_session_tags')) {
                obj['aws_session_tags'] = ApiClient.convertToType(data['aws_session_tags'], 'String');
            }
            if (data.hasOwnProperty('aws_session_token')) {
                obj['aws_session_token'] = ApiClient.convertToType(data['aws_session_token'], 'String');
            }
            if (data.hasOwnProperty('aws_transitive_tag_keys')) {
                obj['aws_transitive_tag_keys'] = ApiClient.convertToType(data['aws_transitive_tag_keys'], 'String');
            }
            if (data.hasOwnProperty('aws_user_console_access')) {
                obj['aws_user_console_access'] = ApiClient.convertToType(data['aws_user_console_access'], 'Boolean');
            }
            if (data.hasOwnProperty('aws_user_groups')) {
                obj['aws_user_groups'] = ApiClient.convertToType(data['aws_user_groups'], 'String');
            }
            if (data.hasOwnProperty('aws_user_policies')) {
                obj['aws_user_policies'] = ApiClient.convertToType(data['aws_user_policies'], 'String');
            }
            if (data.hasOwnProperty('aws_user_programmatic_access')) {
                obj['aws_user_programmatic_access'] = ApiClient.convertToType(data['aws_user_programmatic_access'], 'Boolean');
            }
            if (data.hasOwnProperty('azure_app_object_id')) {
                obj['azure_app_object_id'] = ApiClient.convertToType(data['azure_app_object_id'], 'String');
            }
            if (data.hasOwnProperty('azure_client_id')) {
                obj['azure_client_id'] = ApiClient.convertToType(data['azure_client_id'], 'String');
            }
            if (data.hasOwnProperty('azure_client_secret')) {
                obj['azure_client_secret'] = ApiClient.convertToType(data['azure_client_secret'], 'String');
            }
            if (data.hasOwnProperty('azure_fixed_user_name_sub_claim_key')) {
                obj['azure_fixed_user_name_sub_claim_key'] = ApiClient.convertToType(data['azure_fixed_user_name_sub_claim_key'], 'String');
            }
            if (data.hasOwnProperty('azure_fixed_user_only')) {
                obj['azure_fixed_user_only'] = ApiClient.convertToType(data['azure_fixed_user_only'], 'Boolean');
            }
            if (data.hasOwnProperty('azure_resource_group_name')) {
                obj['azure_resource_group_name'] = ApiClient.convertToType(data['azure_resource_group_name'], 'String');
            }
            if (data.hasOwnProperty('azure_resource_name')) {
                obj['azure_resource_name'] = ApiClient.convertToType(data['azure_resource_name'], 'String');
            }
            if (data.hasOwnProperty('azure_subscription_id')) {
                obj['azure_subscription_id'] = ApiClient.convertToType(data['azure_subscription_id'], 'String');
            }
            if (data.hasOwnProperty('azure_tenant_id')) {
                obj['azure_tenant_id'] = ApiClient.convertToType(data['azure_tenant_id'], 'String');
            }
            if (data.hasOwnProperty('azure_user_groups_obj_id')) {
                obj['azure_user_groups_obj_id'] = ApiClient.convertToType(data['azure_user_groups_obj_id'], 'String');
            }
            if (data.hasOwnProperty('azure_user_portal_access')) {
                obj['azure_user_portal_access'] = ApiClient.convertToType(data['azure_user_portal_access'], 'Boolean');
            }
            if (data.hasOwnProperty('azure_user_programmatic_access')) {
                obj['azure_user_programmatic_access'] = ApiClient.convertToType(data['azure_user_programmatic_access'], 'Boolean');
            }
            if (data.hasOwnProperty('azure_user_roles_template_id')) {
                obj['azure_user_roles_template_id'] = ApiClient.convertToType(data['azure_user_roles_template_id'], 'String');
            }
            if (data.hasOwnProperty('azure_username')) {
                obj['azure_username'] = ApiClient.convertToType(data['azure_username'], 'String');
            }
            if (data.hasOwnProperty('cassandra_creation_statements')) {
                obj['cassandra_creation_statements'] = ApiClient.convertToType(data['cassandra_creation_statements'], 'String');
            }
            if (data.hasOwnProperty('chef_organizations')) {
                obj['chef_organizations'] = ApiClient.convertToType(data['chef_organizations'], 'String');
            }
            if (data.hasOwnProperty('chef_server_access_mode')) {
                obj['chef_server_access_mode'] = ApiClient.convertToType(data['chef_server_access_mode'], 'String');
            }
            if (data.hasOwnProperty('chef_server_host_name')) {
                obj['chef_server_host_name'] = ApiClient.convertToType(data['chef_server_host_name'], 'String');
            }
            if (data.hasOwnProperty('chef_server_key')) {
                obj['chef_server_key'] = ApiClient.convertToType(data['chef_server_key'], 'String');
            }
            if (data.hasOwnProperty('chef_server_port')) {
                obj['chef_server_port'] = ApiClient.convertToType(data['chef_server_port'], 'String');
            }
            if (data.hasOwnProperty('chef_server_url')) {
                obj['chef_server_url'] = ApiClient.convertToType(data['chef_server_url'], 'String');
            }
            if (data.hasOwnProperty('chef_server_username')) {
                obj['chef_server_username'] = ApiClient.convertToType(data['chef_server_username'], 'String');
            }
            if (data.hasOwnProperty('chef_skip_ssl')) {
                obj['chef_skip_ssl'] = ApiClient.convertToType(data['chef_skip_ssl'], 'Boolean');
            }
            if (data.hasOwnProperty('client_authentication_type')) {
                obj['client_authentication_type'] = ApiClient.convertToType(data['client_authentication_type'], 'String');
            }
            if (data.hasOwnProperty('cloud_service_provider')) {
                obj['cloud_service_provider'] = ApiClient.convertToType(data['cloud_service_provider'], 'String');
            }
            if (data.hasOwnProperty('cluster_mode')) {
                obj['cluster_mode'] = ApiClient.convertToType(data['cluster_mode'], 'Boolean');
            }
            if (data.hasOwnProperty('connection_type')) {
                obj['connection_type'] = ApiClient.convertToType(data['connection_type'], 'String');
            }
            if (data.hasOwnProperty('create_sync_url')) {
                obj['create_sync_url'] = ApiClient.convertToType(data['create_sync_url'], 'String');
            }
            if (data.hasOwnProperty('db_client_id')) {
                obj['db_client_id'] = ApiClient.convertToType(data['db_client_id'], 'String');
            }
            if (data.hasOwnProperty('db_client_secret')) {
                obj['db_client_secret'] = ApiClient.convertToType(data['db_client_secret'], 'String');
            }
            if (data.hasOwnProperty('db_host_name')) {
                obj['db_host_name'] = ApiClient.convertToType(data['db_host_name'], 'String');
            }
            if (data.hasOwnProperty('db_isolation_level')) {
                obj['db_isolation_level'] = ApiClient.convertToType(data['db_isolation_level'], 'String');
            }
            if (data.hasOwnProperty('db_max_idle_conns')) {
                obj['db_max_idle_conns'] = ApiClient.convertToType(data['db_max_idle_conns'], 'String');
            }
            if (data.hasOwnProperty('db_max_open_conns')) {
                obj['db_max_open_conns'] = ApiClient.convertToType(data['db_max_open_conns'], 'String');
            }
            if (data.hasOwnProperty('db_name')) {
                obj['db_name'] = ApiClient.convertToType(data['db_name'], 'String');
            }
            if (data.hasOwnProperty('db_port')) {
                obj['db_port'] = ApiClient.convertToType(data['db_port'], 'String');
            }
            if (data.hasOwnProperty('db_private_key')) {
                obj['db_private_key'] = ApiClient.convertToType(data['db_private_key'], 'String');
            }
            if (data.hasOwnProperty('db_private_key_passphrase')) {
                obj['db_private_key_passphrase'] = ApiClient.convertToType(data['db_private_key_passphrase'], 'String');
            }
            if (data.hasOwnProperty('db_pwd')) {
                obj['db_pwd'] = ApiClient.convertToType(data['db_pwd'], 'String');
            }
            if (data.hasOwnProperty('db_server_certificates')) {
                obj['db_server_certificates'] = ApiClient.convertToType(data['db_server_certificates'], 'String');
            }
            if (data.hasOwnProperty('db_server_name')) {
                obj['db_server_name'] = ApiClient.convertToType(data['db_server_name'], 'String');
            }
            if (data.hasOwnProperty('db_tenant_id')) {
                obj['db_tenant_id'] = ApiClient.convertToType(data['db_tenant_id'], 'String');
            }
            if (data.hasOwnProperty('db_user_name')) {
                obj['db_user_name'] = ApiClient.convertToType(data['db_user_name'], 'String');
            }
            if (data.hasOwnProperty('delete_protection')) {
                obj['delete_protection'] = ApiClient.convertToType(data['delete_protection'], 'Boolean');
            }
            if (data.hasOwnProperty('dynamic_secret_id')) {
                obj['dynamic_secret_id'] = ApiClient.convertToType(data['dynamic_secret_id'], 'Number');
            }
            if (data.hasOwnProperty('dynamic_secret_key')) {
                obj['dynamic_secret_key'] = ApiClient.convertToType(data['dynamic_secret_key'], 'String');
            }
            if (data.hasOwnProperty('dynamic_secret_name')) {
                obj['dynamic_secret_name'] = ApiClient.convertToType(data['dynamic_secret_name'], 'String');
            }
            if (data.hasOwnProperty('dynamic_secret_type')) {
                obj['dynamic_secret_type'] = ApiClient.convertToType(data['dynamic_secret_type'], 'String');
            }
            if (data.hasOwnProperty('eks_access_key_id')) {
                obj['eks_access_key_id'] = ApiClient.convertToType(data['eks_access_key_id'], 'String');
            }
            if (data.hasOwnProperty('eks_assume_role')) {
                obj['eks_assume_role'] = ApiClient.convertToType(data['eks_assume_role'], 'String');
            }
            if (data.hasOwnProperty('eks_cluster_ca_certificate')) {
                obj['eks_cluster_ca_certificate'] = ApiClient.convertToType(data['eks_cluster_ca_certificate'], 'String');
            }
            if (data.hasOwnProperty('eks_cluster_endpoint')) {
                obj['eks_cluster_endpoint'] = ApiClient.convertToType(data['eks_cluster_endpoint'], 'String');
            }
            if (data.hasOwnProperty('eks_cluster_name')) {
                obj['eks_cluster_name'] = ApiClient.convertToType(data['eks_cluster_name'], 'String');
            }
            if (data.hasOwnProperty('eks_region')) {
                obj['eks_region'] = ApiClient.convertToType(data['eks_region'], 'String');
            }
            if (data.hasOwnProperty('eks_secret_access_key')) {
                obj['eks_secret_access_key'] = ApiClient.convertToType(data['eks_secret_access_key'], 'String');
            }
            if (data.hasOwnProperty('enable_admin_rotation')) {
                obj['enable_admin_rotation'] = ApiClient.convertToType(data['enable_admin_rotation'], 'Boolean');
            }
            if (data.hasOwnProperty('enforce_replay_prevention')) {
                obj['enforce_replay_prevention'] = ApiClient.convertToType(data['enforce_replay_prevention'], 'Boolean');
            }
            if (data.hasOwnProperty('externally_provided_user')) {
                obj['externally_provided_user'] = ApiClient.convertToType(data['externally_provided_user'], 'String');
            }
            if (data.hasOwnProperty('failure_message')) {
                obj['failure_message'] = ApiClient.convertToType(data['failure_message'], 'String');
            }
            if (data.hasOwnProperty('fixed_user_only')) {
                obj['fixed_user_only'] = ApiClient.convertToType(data['fixed_user_only'], 'String');
            }
            if (data.hasOwnProperty('gcp_key_algo')) {
                obj['gcp_key_algo'] = ApiClient.convertToType(data['gcp_key_algo'], 'String');
            }
            if (data.hasOwnProperty('gcp_role_bindings')) {
                obj['gcp_role_bindings'] = ApiClient.convertToType(data['gcp_role_bindings'], {'String': ['String']});
            }
            if (data.hasOwnProperty('gcp_service_account_email')) {
                obj['gcp_service_account_email'] = ApiClient.convertToType(data['gcp_service_account_email'], 'String');
            }
            if (data.hasOwnProperty('gcp_service_account_key')) {
                obj['gcp_service_account_key'] = ApiClient.convertToType(data['gcp_service_account_key'], 'String');
            }
            if (data.hasOwnProperty('gcp_service_account_key_base64')) {
                obj['gcp_service_account_key_base64'] = ApiClient.convertToType(data['gcp_service_account_key_base64'], 'String');
            }
            if (data.hasOwnProperty('gcp_service_account_key_id')) {
                obj['gcp_service_account_key_id'] = ApiClient.convertToType(data['gcp_service_account_key_id'], 'String');
            }
            if (data.hasOwnProperty('gcp_service_account_type')) {
                obj['gcp_service_account_type'] = ApiClient.convertToType(data['gcp_service_account_type'], 'String');
            }
            if (data.hasOwnProperty('gcp_tmp_service_account_name')) {
                obj['gcp_tmp_service_account_name'] = ApiClient.convertToType(data['gcp_tmp_service_account_name'], 'String');
            }
            if (data.hasOwnProperty('gcp_token_lifetime')) {
                obj['gcp_token_lifetime'] = ApiClient.convertToType(data['gcp_token_lifetime'], 'String');
            }
            if (data.hasOwnProperty('gcp_token_scope')) {
                obj['gcp_token_scope'] = ApiClient.convertToType(data['gcp_token_scope'], 'String');
            }
            if (data.hasOwnProperty('gcp_token_type')) {
                obj['gcp_token_type'] = ApiClient.convertToType(data['gcp_token_type'], 'String');
            }
            if (data.hasOwnProperty('github_app_id')) {
                obj['github_app_id'] = ApiClient.convertToType(data['github_app_id'], 'Number');
            }
            if (data.hasOwnProperty('github_app_private_key')) {
                obj['github_app_private_key'] = ApiClient.convertToType(data['github_app_private_key'], 'String');
            }
            if (data.hasOwnProperty('github_base_url')) {
                obj['github_base_url'] = ApiClient.convertToType(data['github_base_url'], 'String');
            }
            if (data.hasOwnProperty('github_installation_id')) {
                obj['github_installation_id'] = ApiClient.convertToType(data['github_installation_id'], 'Number');
            }
            if (data.hasOwnProperty('github_installation_token_permissions')) {
                obj['github_installation_token_permissions'] = ApiClient.convertToType(data['github_installation_token_permissions'], {'String': 'String'});
            }
            if (data.hasOwnProperty('github_installation_token_repositories')) {
                obj['github_installation_token_repositories'] = ApiClient.convertToType(data['github_installation_token_repositories'], ['String']);
            }
            if (data.hasOwnProperty('github_installation_token_repositories_ids')) {
                obj['github_installation_token_repositories_ids'] = ApiClient.convertToType(data['github_installation_token_repositories_ids'], ['Number']);
            }
            if (data.hasOwnProperty('github_organization_name')) {
                obj['github_organization_name'] = ApiClient.convertToType(data['github_organization_name'], 'String');
            }
            if (data.hasOwnProperty('github_repository_path')) {
                obj['github_repository_path'] = ApiClient.convertToType(data['github_repository_path'], 'String');
            }
            if (data.hasOwnProperty('gitlab_access_token')) {
                obj['gitlab_access_token'] = ApiClient.convertToType(data['gitlab_access_token'], 'String');
            }
            if (data.hasOwnProperty('gitlab_access_type')) {
                obj['gitlab_access_type'] = ApiClient.convertToType(data['gitlab_access_type'], 'String');
            }
            if (data.hasOwnProperty('gitlab_certificate')) {
                obj['gitlab_certificate'] = ApiClient.convertToType(data['gitlab_certificate'], 'String');
            }
            if (data.hasOwnProperty('gitlab_group_name')) {
                obj['gitlab_group_name'] = ApiClient.convertToType(data['gitlab_group_name'], 'String');
            }
            if (data.hasOwnProperty('gitlab_project_name')) {
                obj['gitlab_project_name'] = ApiClient.convertToType(data['gitlab_project_name'], 'String');
            }
            if (data.hasOwnProperty('gitlab_role')) {
                obj['gitlab_role'] = ApiClient.convertToType(data['gitlab_role'], 'String');
            }
            if (data.hasOwnProperty('gitlab_token_scope')) {
                obj['gitlab_token_scope'] = ApiClient.convertToType(data['gitlab_token_scope'], ['String']);
            }
            if (data.hasOwnProperty('gitlab_url')) {
                obj['gitlab_url'] = ApiClient.convertToType(data['gitlab_url'], 'String');
            }
            if (data.hasOwnProperty('gke_cluster_ca_certificate')) {
                obj['gke_cluster_ca_certificate'] = ApiClient.convertToType(data['gke_cluster_ca_certificate'], 'String');
            }
            if (data.hasOwnProperty('gke_cluster_endpoint')) {
                obj['gke_cluster_endpoint'] = ApiClient.convertToType(data['gke_cluster_endpoint'], 'String');
            }
            if (data.hasOwnProperty('gke_cluster_name')) {
                obj['gke_cluster_name'] = ApiClient.convertToType(data['gke_cluster_name'], 'String');
            }
            if (data.hasOwnProperty('gke_service_account_key')) {
                obj['gke_service_account_key'] = ApiClient.convertToType(data['gke_service_account_key'], 'String');
            }
            if (data.hasOwnProperty('gke_service_account_name')) {
                obj['gke_service_account_name'] = ApiClient.convertToType(data['gke_service_account_name'], 'String');
            }
            if (data.hasOwnProperty('google_workspace_access_mode')) {
                obj['google_workspace_access_mode'] = ApiClient.convertToType(data['google_workspace_access_mode'], 'String');
            }
            if (data.hasOwnProperty('google_workspace_admin_name')) {
                obj['google_workspace_admin_name'] = ApiClient.convertToType(data['google_workspace_admin_name'], 'String');
            }
            if (data.hasOwnProperty('google_workspace_group_name')) {
                obj['google_workspace_group_name'] = ApiClient.convertToType(data['google_workspace_group_name'], 'String');
            }
            if (data.hasOwnProperty('google_workspace_group_role')) {
                obj['google_workspace_group_role'] = ApiClient.convertToType(data['google_workspace_group_role'], 'String');
            }
            if (data.hasOwnProperty('google_workspace_role_name')) {
                obj['google_workspace_role_name'] = ApiClient.convertToType(data['google_workspace_role_name'], 'String');
            }
            if (data.hasOwnProperty('google_workspace_role_scope')) {
                obj['google_workspace_role_scope'] = ApiClient.convertToType(data['google_workspace_role_scope'], 'String');
            }
            if (data.hasOwnProperty('grant_types')) {
                obj['grant_types'] = ApiClient.convertToType(data['grant_types'], ['String']);
            }
            if (data.hasOwnProperty('groups')) {
                obj['groups'] = ApiClient.convertToType(data['groups'], 'String');
            }
            if (data.hasOwnProperty('hanadb_creation_statements')) {
                obj['hanadb_creation_statements'] = ApiClient.convertToType(data['hanadb_creation_statements'], 'String');
            }
            if (data.hasOwnProperty('hanadb_revocation_statements')) {
                obj['hanadb_revocation_statements'] = ApiClient.convertToType(data['hanadb_revocation_statements'], 'String');
            }
            if (data.hasOwnProperty('host_name')) {
                obj['host_name'] = ApiClient.convertToType(data['host_name'], 'String');
            }
            if (data.hasOwnProperty('host_port')) {
                obj['host_port'] = ApiClient.convertToType(data['host_port'], 'String');
            }
            if (data.hasOwnProperty('implementation_type')) {
                obj['implementation_type'] = ApiClient.convertToType(data['implementation_type'], 'String');
            }
            if (data.hasOwnProperty('is_fixed_user')) {
                obj['is_fixed_user'] = ApiClient.convertToType(data['is_fixed_user'], 'String');
            }
            if (data.hasOwnProperty('issuer')) {
                obj['issuer'] = ApiClient.convertToType(data['issuer'], 'String');
            }
            if (data.hasOwnProperty('item_targets_assoc')) {
                obj['item_targets_assoc'] = ApiClient.convertToType(data['item_targets_assoc'], [ItemTargetAssociation]);
            }
            if (data.hasOwnProperty('jwks')) {
                obj['jwks'] = ApiClient.convertToType(data['jwks'], 'String');
            }
            if (data.hasOwnProperty('jwks_url')) {
                obj['jwks_url'] = ApiClient.convertToType(data['jwks_url'], 'String');
            }
            if (data.hasOwnProperty('k8s_allowed_namespaces')) {
                obj['k8s_allowed_namespaces'] = ApiClient.convertToType(data['k8s_allowed_namespaces'], 'String');
            }
            if (data.hasOwnProperty('k8s_auth_type')) {
                obj['k8s_auth_type'] = ApiClient.convertToType(data['k8s_auth_type'], 'String');
            }
            if (data.hasOwnProperty('k8s_bearer_token')) {
                obj['k8s_bearer_token'] = ApiClient.convertToType(data['k8s_bearer_token'], 'String');
            }
            if (data.hasOwnProperty('k8s_client_cert_data')) {
                obj['k8s_client_cert_data'] = ApiClient.convertToType(data['k8s_client_cert_data'], 'String');
            }
            if (data.hasOwnProperty('k8s_client_key_data')) {
                obj['k8s_client_key_data'] = ApiClient.convertToType(data['k8s_client_key_data'], 'String');
            }
            if (data.hasOwnProperty('k8s_cluster_ca_certificate')) {
                obj['k8s_cluster_ca_certificate'] = ApiClient.convertToType(data['k8s_cluster_ca_certificate'], 'String');
            }
            if (data.hasOwnProperty('k8s_cluster_endpoint')) {
                obj['k8s_cluster_endpoint'] = ApiClient.convertToType(data['k8s_cluster_endpoint'], 'String');
            }
            if (data.hasOwnProperty('k8s_cluster_name')) {
                obj['k8s_cluster_name'] = ApiClient.convertToType(data['k8s_cluster_name'], 'String');
            }
            if (data.hasOwnProperty('k8s_dynamic_mode')) {
                obj['k8s_dynamic_mode'] = ApiClient.convertToType(data['k8s_dynamic_mode'], 'Boolean');
            }
            if (data.hasOwnProperty('k8s_multiple_doc_yaml_temp_definition')) {
                obj['k8s_multiple_doc_yaml_temp_definition'] = ApiClient.convertToType(data['k8s_multiple_doc_yaml_temp_definition'], ['Number']);
            }
            if (data.hasOwnProperty('k8s_namespace')) {
                obj['k8s_namespace'] = ApiClient.convertToType(data['k8s_namespace'], 'String');
            }
            if (data.hasOwnProperty('k8s_role_name')) {
                obj['k8s_role_name'] = ApiClient.convertToType(data['k8s_role_name'], 'String');
            }
            if (data.hasOwnProperty('k8s_role_type')) {
                obj['k8s_role_type'] = ApiClient.convertToType(data['k8s_role_type'], 'String');
            }
            if (data.hasOwnProperty('k8s_service_account')) {
                obj['k8s_service_account'] = ApiClient.convertToType(data['k8s_service_account'], 'String');
            }
            if (data.hasOwnProperty('last_admin_rotation')) {
                obj['last_admin_rotation'] = ApiClient.convertToType(data['last_admin_rotation'], 'Number');
            }
            if (data.hasOwnProperty('ldap_audience')) {
                obj['ldap_audience'] = ApiClient.convertToType(data['ldap_audience'], 'String');
            }
            if (data.hasOwnProperty('ldap_bind_dn')) {
                obj['ldap_bind_dn'] = ApiClient.convertToType(data['ldap_bind_dn'], 'String');
            }
            if (data.hasOwnProperty('ldap_bind_password')) {
                obj['ldap_bind_password'] = ApiClient.convertToType(data['ldap_bind_password'], 'String');
            }
            if (data.hasOwnProperty('ldap_certificate')) {
                obj['ldap_certificate'] = ApiClient.convertToType(data['ldap_certificate'], 'String');
            }
            if (data.hasOwnProperty('ldap_group_dn')) {
                obj['ldap_group_dn'] = ApiClient.convertToType(data['ldap_group_dn'], 'String');
            }
            if (data.hasOwnProperty('ldap_token_expiration')) {
                obj['ldap_token_expiration'] = ApiClient.convertToType(data['ldap_token_expiration'], 'String');
            }
            if (data.hasOwnProperty('ldap_url')) {
                obj['ldap_url'] = ApiClient.convertToType(data['ldap_url'], 'String');
            }
            if (data.hasOwnProperty('ldap_user_attr')) {
                obj['ldap_user_attr'] = ApiClient.convertToType(data['ldap_user_attr'], 'String');
            }
            if (data.hasOwnProperty('ldap_user_dn')) {
                obj['ldap_user_dn'] = ApiClient.convertToType(data['ldap_user_dn'], 'String');
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], 'String');
            }
            if (data.hasOwnProperty('mongodb_atlas_api_private_key')) {
                obj['mongodb_atlas_api_private_key'] = ApiClient.convertToType(data['mongodb_atlas_api_private_key'], 'String');
            }
            if (data.hasOwnProperty('mongodb_atlas_api_public_key')) {
                obj['mongodb_atlas_api_public_key'] = ApiClient.convertToType(data['mongodb_atlas_api_public_key'], 'String');
            }
            if (data.hasOwnProperty('mongodb_atlas_project_id')) {
                obj['mongodb_atlas_project_id'] = ApiClient.convertToType(data['mongodb_atlas_project_id'], 'String');
            }
            if (data.hasOwnProperty('mongodb_custom_data')) {
                obj['mongodb_custom_data'] = ApiClient.convertToType(data['mongodb_custom_data'], 'String');
            }
            if (data.hasOwnProperty('mongodb_db_name')) {
                obj['mongodb_db_name'] = ApiClient.convertToType(data['mongodb_db_name'], 'String');
            }
            if (data.hasOwnProperty('mongodb_default_auth_db')) {
                obj['mongodb_default_auth_db'] = ApiClient.convertToType(data['mongodb_default_auth_db'], 'String');
            }
            if (data.hasOwnProperty('mongodb_host_port')) {
                obj['mongodb_host_port'] = ApiClient.convertToType(data['mongodb_host_port'], 'String');
            }
            if (data.hasOwnProperty('mongodb_is_atlas')) {
                obj['mongodb_is_atlas'] = ApiClient.convertToType(data['mongodb_is_atlas'], 'Boolean');
            }
            if (data.hasOwnProperty('mongodb_password')) {
                obj['mongodb_password'] = ApiClient.convertToType(data['mongodb_password'], 'String');
            }
            if (data.hasOwnProperty('mongodb_roles')) {
                obj['mongodb_roles'] = ApiClient.convertToType(data['mongodb_roles'], 'String');
            }
            if (data.hasOwnProperty('mongodb_uri_connection')) {
                obj['mongodb_uri_connection'] = ApiClient.convertToType(data['mongodb_uri_connection'], 'String');
            }
            if (data.hasOwnProperty('mongodb_uri_options')) {
                obj['mongodb_uri_options'] = ApiClient.convertToType(data['mongodb_uri_options'], 'String');
            }
            if (data.hasOwnProperty('mongodb_username')) {
                obj['mongodb_username'] = ApiClient.convertToType(data['mongodb_username'], 'String');
            }
            if (data.hasOwnProperty('mssql_creation_statements')) {
                obj['mssql_creation_statements'] = ApiClient.convertToType(data['mssql_creation_statements'], 'String');
            }
            if (data.hasOwnProperty('mssql_revocation_statements')) {
                obj['mssql_revocation_statements'] = ApiClient.convertToType(data['mssql_revocation_statements'], 'String');
            }
            if (data.hasOwnProperty('mysql_creation_statements')) {
                obj['mysql_creation_statements'] = ApiClient.convertToType(data['mysql_creation_statements'], 'String');
            }
            if (data.hasOwnProperty('mysql_revocation_statements')) {
                obj['mysql_revocation_statements'] = ApiClient.convertToType(data['mysql_revocation_statements'], 'String');
            }
            if (data.hasOwnProperty('oracle_creation_statements')) {
                obj['oracle_creation_statements'] = ApiClient.convertToType(data['oracle_creation_statements'], 'String');
            }
            if (data.hasOwnProperty('oracle_revocation_statements')) {
                obj['oracle_revocation_statements'] = ApiClient.convertToType(data['oracle_revocation_statements'], 'String');
            }
            if (data.hasOwnProperty('password')) {
                obj['password'] = ApiClient.convertToType(data['password'], 'String');
            }
            if (data.hasOwnProperty('password_length')) {
                obj['password_length'] = ApiClient.convertToType(data['password_length'], 'Number');
            }
            if (data.hasOwnProperty('password_policy')) {
                obj['password_policy'] = ApiClient.convertToType(data['password_policy'], 'String');
            }
            if (data.hasOwnProperty('payload')) {
                obj['payload'] = ApiClient.convertToType(data['payload'], 'String');
            }
            if (data.hasOwnProperty('ping_url')) {
                obj['ping_url'] = ApiClient.convertToType(data['ping_url'], 'String');
            }
            if (data.hasOwnProperty('postgres_creation_statements')) {
                obj['postgres_creation_statements'] = ApiClient.convertToType(data['postgres_creation_statements'], 'String');
            }
            if (data.hasOwnProperty('postgres_revocation_statements')) {
                obj['postgres_revocation_statements'] = ApiClient.convertToType(data['postgres_revocation_statements'], 'String');
            }
            if (data.hasOwnProperty('privileged_user')) {
                obj['privileged_user'] = ApiClient.convertToType(data['privileged_user'], 'String');
            }
            if (data.hasOwnProperty('rabbitmq_server_password')) {
                obj['rabbitmq_server_password'] = ApiClient.convertToType(data['rabbitmq_server_password'], 'String');
            }
            if (data.hasOwnProperty('rabbitmq_server_uri')) {
                obj['rabbitmq_server_uri'] = ApiClient.convertToType(data['rabbitmq_server_uri'], 'String');
            }
            if (data.hasOwnProperty('rabbitmq_server_user')) {
                obj['rabbitmq_server_user'] = ApiClient.convertToType(data['rabbitmq_server_user'], 'String');
            }
            if (data.hasOwnProperty('rabbitmq_user_conf_permission')) {
                obj['rabbitmq_user_conf_permission'] = ApiClient.convertToType(data['rabbitmq_user_conf_permission'], 'String');
            }
            if (data.hasOwnProperty('rabbitmq_user_read_permission')) {
                obj['rabbitmq_user_read_permission'] = ApiClient.convertToType(data['rabbitmq_user_read_permission'], 'String');
            }
            if (data.hasOwnProperty('rabbitmq_user_tags')) {
                obj['rabbitmq_user_tags'] = ApiClient.convertToType(data['rabbitmq_user_tags'], 'String');
            }
            if (data.hasOwnProperty('rabbitmq_user_vhost')) {
                obj['rabbitmq_user_vhost'] = ApiClient.convertToType(data['rabbitmq_user_vhost'], 'String');
            }
            if (data.hasOwnProperty('rabbitmq_user_write_permission')) {
                obj['rabbitmq_user_write_permission'] = ApiClient.convertToType(data['rabbitmq_user_write_permission'], 'String');
            }
            if (data.hasOwnProperty('redirect_uris')) {
                obj['redirect_uris'] = ApiClient.convertToType(data['redirect_uris'], ['String']);
            }
            if (data.hasOwnProperty('redshift_creation_statements')) {
                obj['redshift_creation_statements'] = ApiClient.convertToType(data['redshift_creation_statements'], 'String');
            }
            if (data.hasOwnProperty('restricted_scopes')) {
                obj['restricted_scopes'] = ApiClient.convertToType(data['restricted_scopes'], ['String']);
            }
            if (data.hasOwnProperty('revoke_sync_url')) {
                obj['revoke_sync_url'] = ApiClient.convertToType(data['revoke_sync_url'], 'String');
            }
            if (data.hasOwnProperty('rotate_sync_url')) {
                obj['rotate_sync_url'] = ApiClient.convertToType(data['rotate_sync_url'], 'String');
            }
            if (data.hasOwnProperty('scopes')) {
                obj['scopes'] = ApiClient.convertToType(data['scopes'], ['String']);
            }
            if (data.hasOwnProperty('secure_remote_access_details')) {
                obj['secure_remote_access_details'] = SecureRemoteAccess.constructFromObject(data['secure_remote_access_details']);
            }
            if (data.hasOwnProperty('session_extension_warn_interval_min')) {
                obj['session_extension_warn_interval_min'] = ApiClient.convertToType(data['session_extension_warn_interval_min'], 'Number');
            }
            if (data.hasOwnProperty('sf_account')) {
                obj['sf_account'] = ApiClient.convertToType(data['sf_account'], 'String');
            }
            if (data.hasOwnProperty('sf_user_role')) {
                obj['sf_user_role'] = ApiClient.convertToType(data['sf_user_role'], 'String');
            }
            if (data.hasOwnProperty('sf_warehouse_name')) {
                obj['sf_warehouse_name'] = ApiClient.convertToType(data['sf_warehouse_name'], 'String');
            }
            if (data.hasOwnProperty('should_stop')) {
                obj['should_stop'] = ApiClient.convertToType(data['should_stop'], 'String');
            }
            if (data.hasOwnProperty('signing_algorithm')) {
                obj['signing_algorithm'] = ApiClient.convertToType(data['signing_algorithm'], 'String');
            }
            if (data.hasOwnProperty('ssl_connection_certificate')) {
                obj['ssl_connection_certificate'] = ApiClient.convertToType(data['ssl_connection_certificate'], 'String');
            }
            if (data.hasOwnProperty('ssl_connection_mode')) {
                obj['ssl_connection_mode'] = ApiClient.convertToType(data['ssl_connection_mode'], 'Boolean');
            }
            if (data.hasOwnProperty('subject_dn')) {
                obj['subject_dn'] = ApiClient.convertToType(data['subject_dn'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], ['String']);
            }
            if (data.hasOwnProperty('timeout_seconds')) {
                obj['timeout_seconds'] = ApiClient.convertToType(data['timeout_seconds'], 'Number');
            }
            if (data.hasOwnProperty('use_gw_cloud_identity')) {
                obj['use_gw_cloud_identity'] = ApiClient.convertToType(data['use_gw_cloud_identity'], 'Boolean');
            }
            if (data.hasOwnProperty('use_gw_service_account')) {
                obj['use_gw_service_account'] = ApiClient.convertToType(data['use_gw_service_account'], 'Boolean');
            }
            if (data.hasOwnProperty('user_name')) {
                obj['user_name'] = ApiClient.convertToType(data['user_name'], 'String');
            }
            if (data.hasOwnProperty('user_password')) {
                obj['user_password'] = ApiClient.convertToType(data['user_password'], 'String');
            }
            if (data.hasOwnProperty('user_principal_name')) {
                obj['user_principal_name'] = ApiClient.convertToType(data['user_principal_name'], 'String');
            }
            if (data.hasOwnProperty('user_ttl')) {
                obj['user_ttl'] = ApiClient.convertToType(data['user_ttl'], 'String');
            }
            if (data.hasOwnProperty('username_length')) {
                obj['username_length'] = ApiClient.convertToType(data['username_length'], 'Number');
            }
            if (data.hasOwnProperty('username_policy')) {
                obj['username_policy'] = ApiClient.convertToType(data['username_policy'], 'String');
            }
            if (data.hasOwnProperty('venafi_allow_subdomains')) {
                obj['venafi_allow_subdomains'] = ApiClient.convertToType(data['venafi_allow_subdomains'], 'Boolean');
            }
            if (data.hasOwnProperty('venafi_allowed_domains')) {
                obj['venafi_allowed_domains'] = ApiClient.convertToType(data['venafi_allowed_domains'], ['String']);
            }
            if (data.hasOwnProperty('venafi_api_key')) {
                obj['venafi_api_key'] = ApiClient.convertToType(data['venafi_api_key'], 'String');
            }
            if (data.hasOwnProperty('venafi_auto_generated_folder')) {
                obj['venafi_auto_generated_folder'] = ApiClient.convertToType(data['venafi_auto_generated_folder'], 'String');
            }
            if (data.hasOwnProperty('venafi_base_url')) {
                obj['venafi_base_url'] = ApiClient.convertToType(data['venafi_base_url'], 'String');
            }
            if (data.hasOwnProperty('venafi_root_first_in_chain')) {
                obj['venafi_root_first_in_chain'] = ApiClient.convertToType(data['venafi_root_first_in_chain'], 'Boolean');
            }
            if (data.hasOwnProperty('venafi_sign_using_akeyless_pki')) {
                obj['venafi_sign_using_akeyless_pki'] = ApiClient.convertToType(data['venafi_sign_using_akeyless_pki'], 'Boolean');
            }
            if (data.hasOwnProperty('venafi_signer_key_name')) {
                obj['venafi_signer_key_name'] = ApiClient.convertToType(data['venafi_signer_key_name'], 'String');
            }
            if (data.hasOwnProperty('venafi_store_private_key')) {
                obj['venafi_store_private_key'] = ApiClient.convertToType(data['venafi_store_private_key'], 'Boolean');
            }
            if (data.hasOwnProperty('venafi_tpp_access_token')) {
                obj['venafi_tpp_access_token'] = ApiClient.convertToType(data['venafi_tpp_access_token'], 'String');
            }
            if (data.hasOwnProperty('venafi_tpp_client_id')) {
                obj['venafi_tpp_client_id'] = ApiClient.convertToType(data['venafi_tpp_client_id'], 'String');
            }
            if (data.hasOwnProperty('venafi_tpp_password')) {
                obj['venafi_tpp_password'] = ApiClient.convertToType(data['venafi_tpp_password'], 'String');
            }
            if (data.hasOwnProperty('venafi_tpp_refresh_token')) {
                obj['venafi_tpp_refresh_token'] = ApiClient.convertToType(data['venafi_tpp_refresh_token'], 'String');
            }
            if (data.hasOwnProperty('venafi_tpp_username')) {
                obj['venafi_tpp_username'] = ApiClient.convertToType(data['venafi_tpp_username'], 'String');
            }
            if (data.hasOwnProperty('venafi_use_tpp')) {
                obj['venafi_use_tpp'] = ApiClient.convertToType(data['venafi_use_tpp'], 'Boolean');
            }
            if (data.hasOwnProperty('venafi_zone')) {
                obj['venafi_zone'] = ApiClient.convertToType(data['venafi_zone'], 'String');
            }
            if (data.hasOwnProperty('warn_before_user_expiration_min')) {
                obj['warn_before_user_expiration_min'] = ApiClient.convertToType(data['warn_before_user_expiration_min'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * @member {String} access_token_manager_id
 */
DSProducerDetails.prototype['access_token_manager_id'] = undefined;

/**
 * @member {Array.<String>} acl_rules
 */
DSProducerDetails.prototype['acl_rules'] = undefined;

/**
 * @member {Boolean} active
 */
DSProducerDetails.prototype['active'] = undefined;

/**
 * @member {String} admin_name
 */
DSProducerDetails.prototype['admin_name'] = undefined;

/**
 * @member {String} admin_pwd
 */
DSProducerDetails.prototype['admin_pwd'] = undefined;

/**
 * @member {Number} admin_rotation_interval_days
 */
DSProducerDetails.prototype['admin_rotation_interval_days'] = undefined;

/**
 * @member {String} administrative_port
 */
DSProducerDetails.prototype['administrative_port'] = undefined;

/**
 * @member {String} artifactory_admin_apikey
 */
DSProducerDetails.prototype['artifactory_admin_apikey'] = undefined;

/**
 * @member {String} artifactory_admin_username
 */
DSProducerDetails.prototype['artifactory_admin_username'] = undefined;

/**
 * @member {String} artifactory_base_url
 */
DSProducerDetails.prototype['artifactory_base_url'] = undefined;

/**
 * @member {String} artifactory_token_audience
 */
DSProducerDetails.prototype['artifactory_token_audience'] = undefined;

/**
 * @member {String} artifactory_token_scope
 */
DSProducerDetails.prototype['artifactory_token_scope'] = undefined;

/**
 * @member {String} authorization_port
 */
DSProducerDetails.prototype['authorization_port'] = undefined;

/**
 * @member {String} aws_access_key_id
 */
DSProducerDetails.prototype['aws_access_key_id'] = undefined;

/**
 * @member {String} aws_access_mode
 */
DSProducerDetails.prototype['aws_access_mode'] = undefined;

/**
 * @member {String} aws_region
 */
DSProducerDetails.prototype['aws_region'] = undefined;

/**
 * @member {String} aws_role_arns
 */
DSProducerDetails.prototype['aws_role_arns'] = undefined;

/**
 * @member {String} aws_secret_access_key
 */
DSProducerDetails.prototype['aws_secret_access_key'] = undefined;

/**
 * @member {String} aws_session_tags
 */
DSProducerDetails.prototype['aws_session_tags'] = undefined;

/**
 * @member {String} aws_session_token
 */
DSProducerDetails.prototype['aws_session_token'] = undefined;

/**
 * @member {String} aws_transitive_tag_keys
 */
DSProducerDetails.prototype['aws_transitive_tag_keys'] = undefined;

/**
 * @member {Boolean} aws_user_console_access
 */
DSProducerDetails.prototype['aws_user_console_access'] = undefined;

/**
 * @member {String} aws_user_groups
 */
DSProducerDetails.prototype['aws_user_groups'] = undefined;

/**
 * @member {String} aws_user_policies
 */
DSProducerDetails.prototype['aws_user_policies'] = undefined;

/**
 * @member {Boolean} aws_user_programmatic_access
 */
DSProducerDetails.prototype['aws_user_programmatic_access'] = undefined;

/**
 * @member {String} azure_app_object_id
 */
DSProducerDetails.prototype['azure_app_object_id'] = undefined;

/**
 * @member {String} azure_client_id
 */
DSProducerDetails.prototype['azure_client_id'] = undefined;

/**
 * @member {String} azure_client_secret
 */
DSProducerDetails.prototype['azure_client_secret'] = undefined;

/**
 * @member {String} azure_fixed_user_name_sub_claim_key
 */
DSProducerDetails.prototype['azure_fixed_user_name_sub_claim_key'] = undefined;

/**
 * @member {Boolean} azure_fixed_user_only
 */
DSProducerDetails.prototype['azure_fixed_user_only'] = undefined;

/**
 * @member {String} azure_resource_group_name
 */
DSProducerDetails.prototype['azure_resource_group_name'] = undefined;

/**
 * @member {String} azure_resource_name
 */
DSProducerDetails.prototype['azure_resource_name'] = undefined;

/**
 * @member {String} azure_subscription_id
 */
DSProducerDetails.prototype['azure_subscription_id'] = undefined;

/**
 * @member {String} azure_tenant_id
 */
DSProducerDetails.prototype['azure_tenant_id'] = undefined;

/**
 * @member {String} azure_user_groups_obj_id
 */
DSProducerDetails.prototype['azure_user_groups_obj_id'] = undefined;

/**
 * @member {Boolean} azure_user_portal_access
 */
DSProducerDetails.prototype['azure_user_portal_access'] = undefined;

/**
 * @member {Boolean} azure_user_programmatic_access
 */
DSProducerDetails.prototype['azure_user_programmatic_access'] = undefined;

/**
 * @member {String} azure_user_roles_template_id
 */
DSProducerDetails.prototype['azure_user_roles_template_id'] = undefined;

/**
 * @member {String} azure_username
 */
DSProducerDetails.prototype['azure_username'] = undefined;

/**
 * @member {String} cassandra_creation_statements
 */
DSProducerDetails.prototype['cassandra_creation_statements'] = undefined;

/**
 * @member {String} chef_organizations
 */
DSProducerDetails.prototype['chef_organizations'] = undefined;

/**
 * @member {String} chef_server_access_mode
 */
DSProducerDetails.prototype['chef_server_access_mode'] = undefined;

/**
 * @member {String} chef_server_host_name
 */
DSProducerDetails.prototype['chef_server_host_name'] = undefined;

/**
 * @member {String} chef_server_key
 */
DSProducerDetails.prototype['chef_server_key'] = undefined;

/**
 * @member {String} chef_server_port
 */
DSProducerDetails.prototype['chef_server_port'] = undefined;

/**
 * @member {String} chef_server_url
 */
DSProducerDetails.prototype['chef_server_url'] = undefined;

/**
 * @member {String} chef_server_username
 */
DSProducerDetails.prototype['chef_server_username'] = undefined;

/**
 * @member {Boolean} chef_skip_ssl
 */
DSProducerDetails.prototype['chef_skip_ssl'] = undefined;

/**
 * @member {String} client_authentication_type
 */
DSProducerDetails.prototype['client_authentication_type'] = undefined;

/**
 * @member {String} cloud_service_provider
 */
DSProducerDetails.prototype['cloud_service_provider'] = undefined;

/**
 * @member {Boolean} cluster_mode
 */
DSProducerDetails.prototype['cluster_mode'] = undefined;

/**
 * @member {String} connection_type
 */
DSProducerDetails.prototype['connection_type'] = undefined;

/**
 * @member {String} create_sync_url
 */
DSProducerDetails.prototype['create_sync_url'] = undefined;

/**
 * @member {String} db_client_id
 */
DSProducerDetails.prototype['db_client_id'] = undefined;

/**
 * @member {String} db_client_secret
 */
DSProducerDetails.prototype['db_client_secret'] = undefined;

/**
 * @member {String} db_host_name
 */
DSProducerDetails.prototype['db_host_name'] = undefined;

/**
 * @member {String} db_isolation_level
 */
DSProducerDetails.prototype['db_isolation_level'] = undefined;

/**
 * @member {String} db_max_idle_conns
 */
DSProducerDetails.prototype['db_max_idle_conns'] = undefined;

/**
 * @member {String} db_max_open_conns
 */
DSProducerDetails.prototype['db_max_open_conns'] = undefined;

/**
 * @member {String} db_name
 */
DSProducerDetails.prototype['db_name'] = undefined;

/**
 * @member {String} db_port
 */
DSProducerDetails.prototype['db_port'] = undefined;

/**
 * (Optional) Private Key in PEM format
 * @member {String} db_private_key
 */
DSProducerDetails.prototype['db_private_key'] = undefined;

/**
 * @member {String} db_private_key_passphrase
 */
DSProducerDetails.prototype['db_private_key_passphrase'] = undefined;

/**
 * @member {String} db_pwd
 */
DSProducerDetails.prototype['db_pwd'] = undefined;

/**
 * (Optional) DBServerCertificates defines the set of root certificate authorities that clients use when verifying server certificates. If DBServerCertificates is empty, TLS uses the host's root CA set.
 * @member {String} db_server_certificates
 */
DSProducerDetails.prototype['db_server_certificates'] = undefined;

/**
 * (Optional) ServerName is used to verify the hostname on the returned certificates unless InsecureSkipVerify is given. It is also included in the client's handshake to support virtual hosting unless it is an IP address.
 * @member {String} db_server_name
 */
DSProducerDetails.prototype['db_server_name'] = undefined;

/**
 * @member {String} db_tenant_id
 */
DSProducerDetails.prototype['db_tenant_id'] = undefined;

/**
 * @member {String} db_user_name
 */
DSProducerDetails.prototype['db_user_name'] = undefined;

/**
 * @member {Boolean} delete_protection
 */
DSProducerDetails.prototype['delete_protection'] = undefined;

/**
 * @member {Number} dynamic_secret_id
 */
DSProducerDetails.prototype['dynamic_secret_id'] = undefined;

/**
 * @member {String} dynamic_secret_key
 */
DSProducerDetails.prototype['dynamic_secret_key'] = undefined;

/**
 * @member {String} dynamic_secret_name
 */
DSProducerDetails.prototype['dynamic_secret_name'] = undefined;

/**
 * @member {String} dynamic_secret_type
 */
DSProducerDetails.prototype['dynamic_secret_type'] = undefined;

/**
 * @member {String} eks_access_key_id
 */
DSProducerDetails.prototype['eks_access_key_id'] = undefined;

/**
 * @member {String} eks_assume_role
 */
DSProducerDetails.prototype['eks_assume_role'] = undefined;

/**
 * @member {String} eks_cluster_ca_certificate
 */
DSProducerDetails.prototype['eks_cluster_ca_certificate'] = undefined;

/**
 * @member {String} eks_cluster_endpoint
 */
DSProducerDetails.prototype['eks_cluster_endpoint'] = undefined;

/**
 * @member {String} eks_cluster_name
 */
DSProducerDetails.prototype['eks_cluster_name'] = undefined;

/**
 * @member {String} eks_region
 */
DSProducerDetails.prototype['eks_region'] = undefined;

/**
 * @member {String} eks_secret_access_key
 */
DSProducerDetails.prototype['eks_secret_access_key'] = undefined;

/**
 * @member {Boolean} enable_admin_rotation
 */
DSProducerDetails.prototype['enable_admin_rotation'] = undefined;

/**
 * relevant for PRIVATE_KEY_JWT client authentication type
 * @member {Boolean} enforce_replay_prevention
 */
DSProducerDetails.prototype['enforce_replay_prevention'] = undefined;

/**
 * @member {String} externally_provided_user
 */
DSProducerDetails.prototype['externally_provided_user'] = undefined;

/**
 * @member {String} failure_message
 */
DSProducerDetails.prototype['failure_message'] = undefined;

/**
 * @member {String} fixed_user_only
 */
DSProducerDetails.prototype['fixed_user_only'] = undefined;

/**
 * @member {String} gcp_key_algo
 */
DSProducerDetails.prototype['gcp_key_algo'] = undefined;

/**
 * @member {Object.<String, Array.<String>>} gcp_role_bindings
 */
DSProducerDetails.prototype['gcp_role_bindings'] = undefined;

/**
 * GCPServiceAccountEmail overrides the deprecated field from the target
 * @member {String} gcp_service_account_email
 */
DSProducerDetails.prototype['gcp_service_account_email'] = undefined;

/**
 * @member {String} gcp_service_account_key
 */
DSProducerDetails.prototype['gcp_service_account_key'] = undefined;

/**
 * @member {String} gcp_service_account_key_base64
 */
DSProducerDetails.prototype['gcp_service_account_key_base64'] = undefined;

/**
 * @member {String} gcp_service_account_key_id
 */
DSProducerDetails.prototype['gcp_service_account_key_id'] = undefined;

/**
 * @member {String} gcp_service_account_type
 */
DSProducerDetails.prototype['gcp_service_account_type'] = undefined;

/**
 * @member {String} gcp_tmp_service_account_name
 */
DSProducerDetails.prototype['gcp_tmp_service_account_name'] = undefined;

/**
 * @member {String} gcp_token_lifetime
 */
DSProducerDetails.prototype['gcp_token_lifetime'] = undefined;

/**
 * @member {String} gcp_token_scope
 */
DSProducerDetails.prototype['gcp_token_scope'] = undefined;

/**
 * @member {String} gcp_token_type
 */
DSProducerDetails.prototype['gcp_token_type'] = undefined;

/**
 * @member {Number} github_app_id
 */
DSProducerDetails.prototype['github_app_id'] = undefined;

/**
 * @member {String} github_app_private_key
 */
DSProducerDetails.prototype['github_app_private_key'] = undefined;

/**
 * @member {String} github_base_url
 */
DSProducerDetails.prototype['github_base_url'] = undefined;

/**
 * @member {Number} github_installation_id
 */
DSProducerDetails.prototype['github_installation_id'] = undefined;

/**
 * @member {Object.<String, String>} github_installation_token_permissions
 */
DSProducerDetails.prototype['github_installation_token_permissions'] = undefined;

/**
 * @member {Array.<String>} github_installation_token_repositories
 */
DSProducerDetails.prototype['github_installation_token_repositories'] = undefined;

/**
 * @member {Array.<Number>} github_installation_token_repositories_ids
 */
DSProducerDetails.prototype['github_installation_token_repositories_ids'] = undefined;

/**
 * @member {String} github_organization_name
 */
DSProducerDetails.prototype['github_organization_name'] = undefined;

/**
 * @member {String} github_repository_path
 */
DSProducerDetails.prototype['github_repository_path'] = undefined;

/**
 * @member {String} gitlab_access_token
 */
DSProducerDetails.prototype['gitlab_access_token'] = undefined;

/**
 * @member {String} gitlab_access_type
 */
DSProducerDetails.prototype['gitlab_access_type'] = undefined;

/**
 * @member {String} gitlab_certificate
 */
DSProducerDetails.prototype['gitlab_certificate'] = undefined;

/**
 * @member {String} gitlab_group_name
 */
DSProducerDetails.prototype['gitlab_group_name'] = undefined;

/**
 * @member {String} gitlab_project_name
 */
DSProducerDetails.prototype['gitlab_project_name'] = undefined;

/**
 * @member {String} gitlab_role
 */
DSProducerDetails.prototype['gitlab_role'] = undefined;

/**
 * @member {Array.<String>} gitlab_token_scope
 */
DSProducerDetails.prototype['gitlab_token_scope'] = undefined;

/**
 * @member {String} gitlab_url
 */
DSProducerDetails.prototype['gitlab_url'] = undefined;

/**
 * @member {String} gke_cluster_ca_certificate
 */
DSProducerDetails.prototype['gke_cluster_ca_certificate'] = undefined;

/**
 * @member {String} gke_cluster_endpoint
 */
DSProducerDetails.prototype['gke_cluster_endpoint'] = undefined;

/**
 * @member {String} gke_cluster_name
 */
DSProducerDetails.prototype['gke_cluster_name'] = undefined;

/**
 * @member {String} gke_service_account_key
 */
DSProducerDetails.prototype['gke_service_account_key'] = undefined;

/**
 * @member {String} gke_service_account_name
 */
DSProducerDetails.prototype['gke_service_account_name'] = undefined;

/**
 * @member {String} google_workspace_access_mode
 */
DSProducerDetails.prototype['google_workspace_access_mode'] = undefined;

/**
 * @member {String} google_workspace_admin_name
 */
DSProducerDetails.prototype['google_workspace_admin_name'] = undefined;

/**
 * @member {String} google_workspace_group_name
 */
DSProducerDetails.prototype['google_workspace_group_name'] = undefined;

/**
 * @member {String} google_workspace_group_role
 */
DSProducerDetails.prototype['google_workspace_group_role'] = undefined;

/**
 * @member {String} google_workspace_role_name
 */
DSProducerDetails.prototype['google_workspace_role_name'] = undefined;

/**
 * @member {String} google_workspace_role_scope
 */
DSProducerDetails.prototype['google_workspace_role_scope'] = undefined;

/**
 * @member {Array.<String>} grant_types
 */
DSProducerDetails.prototype['grant_types'] = undefined;

/**
 * @member {String} groups
 */
DSProducerDetails.prototype['groups'] = undefined;

/**
 * @member {String} hanadb_creation_statements
 */
DSProducerDetails.prototype['hanadb_creation_statements'] = undefined;

/**
 * @member {String} hanadb_revocation_statements
 */
DSProducerDetails.prototype['hanadb_revocation_statements'] = undefined;

/**
 * @member {String} host_name
 */
DSProducerDetails.prototype['host_name'] = undefined;

/**
 * @member {String} host_port
 */
DSProducerDetails.prototype['host_port'] = undefined;

/**
 * @member {String} implementation_type
 */
DSProducerDetails.prototype['implementation_type'] = undefined;

/**
 * @member {String} is_fixed_user
 */
DSProducerDetails.prototype['is_fixed_user'] = undefined;

/**
 * relevant for CLIENT_TLS_CERTIFICATE client authentication type
 * @member {String} issuer
 */
DSProducerDetails.prototype['issuer'] = undefined;

/**
 * @member {Array.<module:model/ItemTargetAssociation>} item_targets_assoc
 */
DSProducerDetails.prototype['item_targets_assoc'] = undefined;

/**
 * @member {String} jwks
 */
DSProducerDetails.prototype['jwks'] = undefined;

/**
 * @member {String} jwks_url
 */
DSProducerDetails.prototype['jwks_url'] = undefined;

/**
 * comma-separated list of allowed namespaces. Can hold just * which signifies that any namespace is allowed
 * @member {String} k8s_allowed_namespaces
 */
DSProducerDetails.prototype['k8s_allowed_namespaces'] = undefined;

/**
 * @member {String} k8s_auth_type
 */
DSProducerDetails.prototype['k8s_auth_type'] = undefined;

/**
 * @member {String} k8s_bearer_token
 */
DSProducerDetails.prototype['k8s_bearer_token'] = undefined;

/**
 * For K8s Client certificates authentication
 * @member {String} k8s_client_cert_data
 */
DSProducerDetails.prototype['k8s_client_cert_data'] = undefined;

/**
 * @member {String} k8s_client_key_data
 */
DSProducerDetails.prototype['k8s_client_key_data'] = undefined;

/**
 * @member {String} k8s_cluster_ca_certificate
 */
DSProducerDetails.prototype['k8s_cluster_ca_certificate'] = undefined;

/**
 * @member {String} k8s_cluster_endpoint
 */
DSProducerDetails.prototype['k8s_cluster_endpoint'] = undefined;

/**
 * @member {String} k8s_cluster_name
 */
DSProducerDetails.prototype['k8s_cluster_name'] = undefined;

/**
 * when native k8s is in dynamic mode, user can define allowed namespaces, K8sServiceAccount doesn't exist from the start and will only be created at time of getting dynamic secret value By default dynamic mode is false and producer behaves like it did before
 * @member {Boolean} k8s_dynamic_mode
 */
DSProducerDetails.prototype['k8s_dynamic_mode'] = undefined;

/**
 * Yaml definition for creation of temporary objects. Field that can hold multiple docs from which following will be extracted: ServiceAccount, Role/ClusterRole and RoleBinding/ClusterRoleBinding. If ServiceAccount not specified - it will be generated automatically
 * @member {Array.<Number>} k8s_multiple_doc_yaml_temp_definition
 */
DSProducerDetails.prototype['k8s_multiple_doc_yaml_temp_definition'] = undefined;

/**
 * @member {String} k8s_namespace
 */
DSProducerDetails.prototype['k8s_namespace'] = undefined;

/**
 * Name of the pre-existing Role or ClusterRole to bind a generated service account to.
 * @member {String} k8s_role_name
 */
DSProducerDetails.prototype['k8s_role_name'] = undefined;

/**
 * @member {String} k8s_role_type
 */
DSProducerDetails.prototype['k8s_role_type'] = undefined;

/**
 * @member {String} k8s_service_account
 */
DSProducerDetails.prototype['k8s_service_account'] = undefined;

/**
 * @member {Number} last_admin_rotation
 */
DSProducerDetails.prototype['last_admin_rotation'] = undefined;

/**
 * @member {String} ldap_audience
 */
DSProducerDetails.prototype['ldap_audience'] = undefined;

/**
 * @member {String} ldap_bind_dn
 */
DSProducerDetails.prototype['ldap_bind_dn'] = undefined;

/**
 * @member {String} ldap_bind_password
 */
DSProducerDetails.prototype['ldap_bind_password'] = undefined;

/**
 * @member {String} ldap_certificate
 */
DSProducerDetails.prototype['ldap_certificate'] = undefined;

/**
 * @member {String} ldap_group_dn
 */
DSProducerDetails.prototype['ldap_group_dn'] = undefined;

/**
 * @member {String} ldap_token_expiration
 */
DSProducerDetails.prototype['ldap_token_expiration'] = undefined;

/**
 * @member {String} ldap_url
 */
DSProducerDetails.prototype['ldap_url'] = undefined;

/**
 * @member {String} ldap_user_attr
 */
DSProducerDetails.prototype['ldap_user_attr'] = undefined;

/**
 * @member {String} ldap_user_dn
 */
DSProducerDetails.prototype['ldap_user_dn'] = undefined;

/**
 * @member {String} metadata
 */
DSProducerDetails.prototype['metadata'] = undefined;

/**
 * @member {String} mongodb_atlas_api_private_key
 */
DSProducerDetails.prototype['mongodb_atlas_api_private_key'] = undefined;

/**
 * @member {String} mongodb_atlas_api_public_key
 */
DSProducerDetails.prototype['mongodb_atlas_api_public_key'] = undefined;

/**
 * mongodb atlas fields
 * @member {String} mongodb_atlas_project_id
 */
DSProducerDetails.prototype['mongodb_atlas_project_id'] = undefined;

/**
 * @member {String} mongodb_custom_data
 */
DSProducerDetails.prototype['mongodb_custom_data'] = undefined;

/**
 * common fields
 * @member {String} mongodb_db_name
 */
DSProducerDetails.prototype['mongodb_db_name'] = undefined;

/**
 * @member {String} mongodb_default_auth_db
 */
DSProducerDetails.prototype['mongodb_default_auth_db'] = undefined;

/**
 * @member {String} mongodb_host_port
 */
DSProducerDetails.prototype['mongodb_host_port'] = undefined;

/**
 * @member {Boolean} mongodb_is_atlas
 */
DSProducerDetails.prototype['mongodb_is_atlas'] = undefined;

/**
 * @member {String} mongodb_password
 */
DSProducerDetails.prototype['mongodb_password'] = undefined;

/**
 * common fields
 * @member {String} mongodb_roles
 */
DSProducerDetails.prototype['mongodb_roles'] = undefined;

/**
 * mongodb fields
 * @member {String} mongodb_uri_connection
 */
DSProducerDetails.prototype['mongodb_uri_connection'] = undefined;

/**
 * @member {String} mongodb_uri_options
 */
DSProducerDetails.prototype['mongodb_uri_options'] = undefined;

/**
 * @member {String} mongodb_username
 */
DSProducerDetails.prototype['mongodb_username'] = undefined;

/**
 * @member {String} mssql_creation_statements
 */
DSProducerDetails.prototype['mssql_creation_statements'] = undefined;

/**
 * @member {String} mssql_revocation_statements
 */
DSProducerDetails.prototype['mssql_revocation_statements'] = undefined;

/**
 * @member {String} mysql_creation_statements
 */
DSProducerDetails.prototype['mysql_creation_statements'] = undefined;

/**
 * @member {String} mysql_revocation_statements
 */
DSProducerDetails.prototype['mysql_revocation_statements'] = undefined;

/**
 * @member {String} oracle_creation_statements
 */
DSProducerDetails.prototype['oracle_creation_statements'] = undefined;

/**
 * @member {String} oracle_revocation_statements
 */
DSProducerDetails.prototype['oracle_revocation_statements'] = undefined;

/**
 * @member {String} password
 */
DSProducerDetails.prototype['password'] = undefined;

/**
 * @member {Number} password_length
 */
DSProducerDetails.prototype['password_length'] = undefined;

/**
 * @member {String} password_policy
 */
DSProducerDetails.prototype['password_policy'] = undefined;

/**
 * @member {String} payload
 */
DSProducerDetails.prototype['payload'] = undefined;

/**
 * @member {String} ping_url
 */
DSProducerDetails.prototype['ping_url'] = undefined;

/**
 * @member {String} postgres_creation_statements
 */
DSProducerDetails.prototype['postgres_creation_statements'] = undefined;

/**
 * @member {String} postgres_revocation_statements
 */
DSProducerDetails.prototype['postgres_revocation_statements'] = undefined;

/**
 * @member {String} privileged_user
 */
DSProducerDetails.prototype['privileged_user'] = undefined;

/**
 * @member {String} rabbitmq_server_password
 */
DSProducerDetails.prototype['rabbitmq_server_password'] = undefined;

/**
 * @member {String} rabbitmq_server_uri
 */
DSProducerDetails.prototype['rabbitmq_server_uri'] = undefined;

/**
 * @member {String} rabbitmq_server_user
 */
DSProducerDetails.prototype['rabbitmq_server_user'] = undefined;

/**
 * @member {String} rabbitmq_user_conf_permission
 */
DSProducerDetails.prototype['rabbitmq_user_conf_permission'] = undefined;

/**
 * @member {String} rabbitmq_user_read_permission
 */
DSProducerDetails.prototype['rabbitmq_user_read_permission'] = undefined;

/**
 * @member {String} rabbitmq_user_tags
 */
DSProducerDetails.prototype['rabbitmq_user_tags'] = undefined;

/**
 * @member {String} rabbitmq_user_vhost
 */
DSProducerDetails.prototype['rabbitmq_user_vhost'] = undefined;

/**
 * @member {String} rabbitmq_user_write_permission
 */
DSProducerDetails.prototype['rabbitmq_user_write_permission'] = undefined;

/**
 * @member {Array.<String>} redirect_uris
 */
DSProducerDetails.prototype['redirect_uris'] = undefined;

/**
 * @member {String} redshift_creation_statements
 */
DSProducerDetails.prototype['redshift_creation_statements'] = undefined;

/**
 * @member {Array.<String>} restricted_scopes
 */
DSProducerDetails.prototype['restricted_scopes'] = undefined;

/**
 * @member {String} revoke_sync_url
 */
DSProducerDetails.prototype['revoke_sync_url'] = undefined;

/**
 * @member {String} rotate_sync_url
 */
DSProducerDetails.prototype['rotate_sync_url'] = undefined;

/**
 * @member {Array.<String>} scopes
 */
DSProducerDetails.prototype['scopes'] = undefined;

/**
 * @member {module:model/SecureRemoteAccess} secure_remote_access_details
 */
DSProducerDetails.prototype['secure_remote_access_details'] = undefined;

/**
 * @member {Number} session_extension_warn_interval_min
 */
DSProducerDetails.prototype['session_extension_warn_interval_min'] = undefined;

/**
 * @member {String} sf_account
 */
DSProducerDetails.prototype['sf_account'] = undefined;

/**
 * generated  users info
 * @member {String} sf_user_role
 */
DSProducerDetails.prototype['sf_user_role'] = undefined;

/**
 * @member {String} sf_warehouse_name
 */
DSProducerDetails.prototype['sf_warehouse_name'] = undefined;

/**
 * TODO delete this after migration
 * @member {String} should_stop
 */
DSProducerDetails.prototype['should_stop'] = undefined;

/**
 * @member {String} signing_algorithm
 */
DSProducerDetails.prototype['signing_algorithm'] = undefined;

/**
 * (Optional) SSLConnectionCertificate defines the certificate for SSL connection. Must be base64 certificate loaded by UI using file loader field
 * @member {String} ssl_connection_certificate
 */
DSProducerDetails.prototype['ssl_connection_certificate'] = undefined;

/**
 * (Optional) SSLConnectionMode defines if SSL mode will be used to connect to DB
 * @member {Boolean} ssl_connection_mode
 */
DSProducerDetails.prototype['ssl_connection_mode'] = undefined;

/**
 * @member {String} subject_dn
 */
DSProducerDetails.prototype['subject_dn'] = undefined;

/**
 * @member {Array.<String>} tags
 */
DSProducerDetails.prototype['tags'] = undefined;

/**
 * @member {Number} timeout_seconds
 */
DSProducerDetails.prototype['timeout_seconds'] = undefined;

/**
 * @member {Boolean} use_gw_cloud_identity
 */
DSProducerDetails.prototype['use_gw_cloud_identity'] = undefined;

/**
 * @member {Boolean} use_gw_service_account
 */
DSProducerDetails.prototype['use_gw_service_account'] = undefined;

/**
 * @member {String} user_name
 */
DSProducerDetails.prototype['user_name'] = undefined;

/**
 * @member {String} user_password
 */
DSProducerDetails.prototype['user_password'] = undefined;

/**
 * @member {String} user_principal_name
 */
DSProducerDetails.prototype['user_principal_name'] = undefined;

/**
 * @member {String} user_ttl
 */
DSProducerDetails.prototype['user_ttl'] = undefined;

/**
 * @member {Number} username_length
 */
DSProducerDetails.prototype['username_length'] = undefined;

/**
 * @member {String} username_policy
 */
DSProducerDetails.prototype['username_policy'] = undefined;

/**
 * @member {Boolean} venafi_allow_subdomains
 */
DSProducerDetails.prototype['venafi_allow_subdomains'] = undefined;

/**
 * @member {Array.<String>} venafi_allowed_domains
 */
DSProducerDetails.prototype['venafi_allowed_domains'] = undefined;

/**
 * @member {String} venafi_api_key
 */
DSProducerDetails.prototype['venafi_api_key'] = undefined;

/**
 * @member {String} venafi_auto_generated_folder
 */
DSProducerDetails.prototype['venafi_auto_generated_folder'] = undefined;

/**
 * @member {String} venafi_base_url
 */
DSProducerDetails.prototype['venafi_base_url'] = undefined;

/**
 * @member {Boolean} venafi_root_first_in_chain
 */
DSProducerDetails.prototype['venafi_root_first_in_chain'] = undefined;

/**
 * @member {Boolean} venafi_sign_using_akeyless_pki
 */
DSProducerDetails.prototype['venafi_sign_using_akeyless_pki'] = undefined;

/**
 * @member {String} venafi_signer_key_name
 */
DSProducerDetails.prototype['venafi_signer_key_name'] = undefined;

/**
 * @member {Boolean} venafi_store_private_key
 */
DSProducerDetails.prototype['venafi_store_private_key'] = undefined;

/**
 * @member {String} venafi_tpp_access_token
 */
DSProducerDetails.prototype['venafi_tpp_access_token'] = undefined;

/**
 * @member {String} venafi_tpp_client_id
 */
DSProducerDetails.prototype['venafi_tpp_client_id'] = undefined;

/**
 * Deprecated: VenafiAccessToken and VenafiRefreshToken should be used instead
 * @member {String} venafi_tpp_password
 */
DSProducerDetails.prototype['venafi_tpp_password'] = undefined;

/**
 * @member {String} venafi_tpp_refresh_token
 */
DSProducerDetails.prototype['venafi_tpp_refresh_token'] = undefined;

/**
 * Deprecated: VenafiAccessToken and VenafiRefreshToken should be used instead
 * @member {String} venafi_tpp_username
 */
DSProducerDetails.prototype['venafi_tpp_username'] = undefined;

/**
 * @member {Boolean} venafi_use_tpp
 */
DSProducerDetails.prototype['venafi_use_tpp'] = undefined;

/**
 * @member {String} venafi_zone
 */
DSProducerDetails.prototype['venafi_zone'] = undefined;

/**
 * @member {Number} warn_before_user_expiration_min
 */
DSProducerDetails.prototype['warn_before_user_expiration_min'] = undefined;






export default DSProducerDetails;

